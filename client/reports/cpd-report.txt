Found a 85 line (298 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 146 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

        Properties props = new Properties();
        AbstractNamingClientProxy proxy = new AbstractNamingClientProxy(sc, props) {
            @Override
            public void onEvent(ServerListChangedEvent event) {
            }
            
            @Override
            public Class<? extends Event> subscribeType() {
                return ServerListChangedEvent.class;
            }
            
            @Override
            public void registerService(String serviceName, String groupName, Instance instance) throws NacosException {
            
            }
            
            @Override
            public void deregisterService(String serviceName, String groupName, Instance instance)
                    throws NacosException {
                
            }
            
            @Override
            public void updateInstance(String serviceName, String groupName, Instance instance) throws NacosException {
            
            }
            
            @Override
            public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters,
                    int udpPort, boolean healthyOnly) throws NacosException {
                return null;
            }
            
            @Override
            public Service queryService(String serviceName, String groupName) throws NacosException {
                return null;
            }
            
            @Override
            public void createService(Service service, AbstractSelector selector) throws NacosException {
            
            }
            
            @Override
            public boolean deleteService(String serviceName, String groupName) throws NacosException {
                return false;
            }
            
            @Override
            public void updateService(Service service, AbstractSelector selector) throws NacosException {
            
            }
            
            @Override
            public ListView<String> getServiceList(int pageNo, int pageSize, String groupName,
                    AbstractSelector selector) throws NacosException {
                return null;
            }
            
            @Override
            public ServiceInfo subscribe(String serviceName, String groupName, String clusters) throws NacosException {
                return null;
            }
            
            @Override
            public void unsubscribe(String serviceName, String groupName, String clusters) throws NacosException {
            
            }
            
            @Override
            public void updateBeatInfo(Set<Instance> modifiedInstances) {
            
            }
            
            @Override
            public boolean serverHealthy() {
                return false;
            }
            
            @Override
            public void shutdown() throws NacosException {
            
            }
        };
        String token = "aa";
=====================================================================
Found a 26 line (213 tokens) duplication in the following files: 
Starting at line 522 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 555 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testReqApi2() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenAnswer(invocationOnMock -> {
            //return url
            HttpRestResult<Object> res = new HttpRestResult<Object>();
            res.setData(invocationOnMock.getArgument(0));
            res.setCode(200);
            return res;
        });
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, new Properties(),
                holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String api = "/api";
        Map<String, String> params = new HashMap<>();
        Map<String, String> body = new HashMap<>();
        String method = HttpMethod.GET;
=====================================================================
Found a 24 line (193 tokens) duplication in the following files: 
Starting at line 489 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 522 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 555 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testReqApi() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenAnswer(invocationOnMock -> {
            //return url
            HttpRestResult<Object> res = new HttpRestResult<Object>();
            res.setData(invocationOnMock.getArgument(0));
            res.setCode(200);
            return res;
        });
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, new Properties(),
                holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String api = "/api";
        Map<String, String> params = new HashMap<>();
=====================================================================
Found a 24 line (186 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 94 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testRegisterService() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("127.0.0.1:8848");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
        String groupName = "group1";
        Instance instance = new Instance();
        //when
        clientProxy.registerService(serviceName, groupName, instance);
=====================================================================
Found a 21 line (181 tokens) duplication in the following files: 
Starting at line 391 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 423 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testSubscribe() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String groupName = "group1";
        String serviceName = "serviceName";
        String clusters = "clusters";
=====================================================================
Found a 21 line (177 tokens) duplication in the following files: 
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 271 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testQueryInstancesOfService() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 21 line (177 tokens) duplication in the following files: 
Starting at line 183 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 242 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testQueryService() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("{\"name\":\"service1\",\"groupName\":\"group1\"}");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 20 line (170 tokens) duplication in the following files: 
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 271 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 391 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 423 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testQueryInstancesOfService() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
=====================================================================
Found a 18 line (169 tokens) duplication in the following files: 
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 215 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 271 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 301 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 391 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 423 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testQueryInstancesOfService() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
=====================================================================
Found a 39 line (167 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\filter\impl\ConfigRequest.java
Starting at line 37 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\filter\impl\ConfigResponse.java

public class ConfigRequest implements IConfigRequest {
    
    private final Map<String, Object> param = new HashMap<String, Object>();
    
    private final IConfigContext configContext = new ConfigContext();
    
    public String getTenant() {
        return (String) param.get(TENANT);
    }
    
    public void setTenant(String tenant) {
        param.put(TENANT, tenant);
    }
    
    public String getDataId() {
        return (String) param.get(DATA_ID);
    }
    
    public void setDataId(String dataId) {
        param.put(DATA_ID, dataId);
    }
    
    public String getGroup() {
        return (String) param.get(GROUP);
    }
    
    public void setGroup(String group) {
        param.put(GROUP, group);
    }
    
    public String getContent() {
        return (String) param.get(CONTENT);
    }
    
    public void setContent(String content) {
        param.put(CONTENT, content);
    }
    
    public String getType() {
=====================================================================
Found a 19 line (147 tokens) duplication in the following files: 
Starting at line 246 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 275 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        a.setData("{\"name\":\"service1\",\"groupName\":\"group1\"}");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String serviceName = "service1";
        String groupName = "group1";
        
        //when
        clientProxy.deleteService(serviceName, groupName);
=====================================================================
Found a 45 line (146 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 87 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

                    LOGGER.warn("read {} conflict;retry time:{}", file.getName(), i);
                }
            } while (null == rlock);
            int fileSize = (int) fcin.size();
            ByteBuffer byteBuffer = ByteBuffer.allocate(fileSize);
            fcin.read(byteBuffer);
            byteBuffer.flip();
            return byteBufferToString(byteBuffer, charsetName);
        } finally {
            if (rlock != null) {
                rlock.release();
                rlock = null;
            }
            if (fis != null) {
                IoUtils.closeQuietly(fis);
                fis = null;
            }
        }
    }
    
    /**
     * write file content.
     *
     * @param path        file path
     * @param content     content
     * @param charsetName charsetName
     * @return whether write ok
     * @throws IOException IOException
     */
    public static Boolean writeFileContent(String path, String content, String charsetName) throws IOException {
        File file = new File(path);
        return writeFileContent(file, content, charsetName);
    }
    
    /**
     * write file content.
     *
     * @param file        file
     * @param content     content
     * @param charsetName charsetName
     * @return whether write ok
     * @throws IOException IOException
     */
    public static Boolean writeFileContent(File file, String content, String charsetName) throws IOException {
        if (!file.exists()) {
=====================================================================
Found a 17 line (145 tokens) duplication in the following files: 
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 156 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 187 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 246 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 275 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 334 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        a.setData("127.0.0.1:8848");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 17 line (141 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 172 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
        final long endTime = System.currentTimeMillis() + readTimeoutMs;
        String currentServerAddr = serverListMgr.getCurrentServerAddr();
        int maxRetry = this.maxRetry;
        HttpClientConfig httpConfig = HttpClientConfig.builder()
                .setReadTimeOutMillis(Long.valueOf(readTimeoutMs).intValue())
                .setConTimeOutMillis(ConfigHttpClientManager.getInstance().getConnectTimeoutOrDefault(100)).build();
        do {
            try {
                Header newHeaders = Header.newInstance();
                if (headers != null) {
                    newHeaders.addAll(headers);
                }
                Query query = Query.newInstance().initParams(paramValues);
                HttpRestResult<String> result = NACOS_RESTTEMPLATE
                        .get(getUrl(currentServerAddr, path), httpConfig, newHeaders, query, String.class);
=====================================================================
Found a 15 line (141 tokens) duplication in the following files: 
Starting at line 364 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 395 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 428 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        a.setData("{\"count\":2,\"doms\":[\"aaa\",\"bbb\"]}");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String groupName = "group1";
=====================================================================
Found a 16 line (138 tokens) duplication in the following files: 
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 156 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 187 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 246 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 275 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 334 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 364 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 395 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 428 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        a.setData("127.0.0.1:8848");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
=====================================================================
Found a 14 line (137 tokens) duplication in the following files: 
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 187 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 219 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 246 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 305 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 334 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 364 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        a.setData("127.0.0.1:8848");
        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
=====================================================================
Found a 19 line (137 tokens) duplication in the following files: 
Starting at line 600 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 633 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

            res.setCode(400);
            return res;
        });
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, new Properties(),
                holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String api = "/api";
        Map<String, String> params = new HashMap<>();
        Map<String, String> body = new HashMap<>();
        String method = HttpMethod.GET;
        String curServer = "127.0.0.1";
=====================================================================
Found a 21 line (135 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
        
        String serviceName = "service1";
        String groupName = "group1";
        Instance instance = new Instance();
        instance.setServiceName(serviceName);
        instance.setClusterName(groupName);
        instance.setIp("1.1.1.1");
        instance.setPort(1);
        // use http
        instance.setEphemeral(true);
        delegate.registerService(serviceName, groupName, instance);
=====================================================================
Found a 21 line (135 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByHttp() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingHttpClientProxy mockHttpClient = Mockito.mock(NamingHttpClientProxy.class);
        Field mockHttpClientField = NamingClientProxyDelegate.class.getDeclaredField("httpClientProxy");
        mockHttpClientField.setAccessible(true);
        mockHttpClientField.set(delegate, mockHttpClient);
        
        String serviceName = "service1";
        String groupName = "group1";
        Instance instance = new Instance();
        instance.setServiceName(serviceName);
        instance.setClusterName(groupName);
        instance.setIp("1.1.1.1");
        instance.setPort(1);
        // use grpc
        instance.setEphemeral(false);
        delegate.registerService(serviceName, groupName, instance);
=====================================================================
Found a 20 line (134 tokens) duplication in the following files: 
Starting at line 530 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 600 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 633 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

            res.setCode(200);
            return res;
        });
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, new Properties(),
                holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String api = "/api";
        Map<String, String> params = new HashMap<>();
        Map<String, String> body = new HashMap<>();
        String method = HttpMethod.GET;
        //when
        String res = clientProxy.reqApi(api, params, body, method);
=====================================================================
Found a 18 line (133 tokens) duplication in the following files: 
Starting at line 563 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 600 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 633 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

            res.setCode(200);
            return res;
        });
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, new Properties(),
                holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String api = "/api";
        Map<String, String> params = new HashMap<>();
        Map<String, String> body = new HashMap<>();
        String method = HttpMethod.GET;
=====================================================================
Found a 11 line (119 tokens) duplication in the following files: 
Starting at line 242 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 272 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        NAMING_LOGGER.info("[CREATE-SERVICE] {} creating service : {}", namespaceId, service);
        
        final Map<String, String> params = new HashMap<String, String>(6);
        params.put(CommonParams.NAMESPACE_ID, namespaceId);
        params.put(CommonParams.SERVICE_NAME, service.getName());
        params.put(CommonParams.GROUP_NAME, service.getGroupName());
        params.put(PROTECT_THRESHOLD_PARAM, String.valueOf(service.getProtectThreshold()));
        params.put(META_PARAM, JacksonUtils.toJson(service.getMetadata()));
        params.put(SELECTOR_PARAM, JacksonUtils.toJson(selector));
        
        reqApi(UtilAndComs.nacosUrlService, params, HttpMethod.POST);
=====================================================================
Found a 13 line (117 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 84 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

    public void testLoginSuccess() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> result = new HttpRestResult<>();
        result.setData("{\"accessToken\":\"ttttttttttttttttt\",\"tokenTtl\":1000}");
        result.setCode(200);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        //when
        boolean ret = securityProxy.login("localhost");
=====================================================================
Found a 16 line (113 tokens) duplication in the following files: 
Starting at line 497 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 600 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 633 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

            res.setCode(200);
            return res;
        });
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, new Properties(),
                holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        String api = "/api";
        Map<String, String> params = new HashMap<>();
=====================================================================
Found a 13 line (112 tokens) duplication in the following files: 
Starting at line 699 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 720 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testGetBeatReactor() throws Exception {
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        String namespaceId = "aaa";
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy(namespaceId, proxy, mgr, props, holder);
        
        BeatReactor mockBeatReactor = mock(BeatReactor.class);
        final Field mockBeatReactorField = NamingHttpClientProxy.class.getDeclaredField("beatReactor");
        mockBeatReactorField.setAccessible(true);
        mockBeatReactorField.set(clientProxy, mockBeatReactor);
=====================================================================
Found a 21 line (110 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatInfoTest.java
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatInfoTest.java

    public void testGetterAndSetter() {
        BeatInfo info = new BeatInfo();
        
        String ip = "1.1.1.1";
        info.setIp(ip);
        int port = 10000;
        info.setPort(port);
        
        double weight = 1.0;
        info.setWeight(weight);
        String serviceName = "serviceName";
        info.setServiceName(serviceName);
        String cluster = "cluster1";
        info.setCluster(cluster);
        Map<String, String> meta = new HashMap<>();
        meta.put("a", "b");
        info.setMetadata(meta);
        long period = 100;
        info.setPeriod(period);
        info.setScheduled(true);
        info.setStopped(true);
=====================================================================
Found a 11 line (110 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 84 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 102 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

    public void testLoginSuccess() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> result = new HttpRestResult<>();
        result.setData("{\"accessToken\":\"ttttttttttttttttt\",\"tokenTtl\":1000}");
        result.setCode(200);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
=====================================================================
Found a 26 line (109 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

    public static String getFileContent(String path, String charsetName) throws IOException {
        File file = new File(path);
        return getFileContent(file, charsetName);
    }
    
    /**
     * get file content.
     *
     * @param file        file
     * @param charsetName charsetName
     * @return content
     * @throws IOException IOException
     */
    public static String getFileContent(File file, String charsetName) throws IOException {
        RandomAccessFile fis = null;
        FileLock rlock = null;
        try {
            fis = new RandomAccessFile(file, READ_ONLY);
            FileChannel fcin = fis.getChannel();
            int i = 0;
            do {
                try {
                    rlock = fcin.tryLock(0L, Long.MAX_VALUE, true);
                } catch (Exception e) {
                    ++i;
                    if (i > RETRY_COUNT) {
=====================================================================
Found a 15 line (102 tokens) duplication in the following files: 
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testQueryInstancesOfService() throws NacosException, IllegalAccessException, NoSuchFieldException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
        
        String serviceName = "service1";
        String groupName = "group1";
        String clusters = "cluster1";
        delegate.queryInstancesOfService(serviceName, groupName, clusters, 0, false);
=====================================================================
Found a 14 line (98 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 89 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        beatInfo.setPort(1234);
        beatInfo.setCluster("clusterName");
        beatInfo.setWeight(1);
        beatInfo.setMetadata(new HashMap<String, String>());
        beatInfo.setScheduled(false);
        beatInfo.setPeriod(10L);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
        BeatReactor beatReactor = new BeatReactor(proxy);
        String serviceName = "serviceName1";
        
        beatReactor.addBeatInfo(serviceName, beatInfo);
        TimeUnit.MILLISECONDS.sleep(15);
        Mockito.verify(proxy, Mockito.times(1)).sendBeat(beatInfo, false);
=====================================================================
Found a 13 line (96 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 14 line (95 tokens) duplication in the following files: 
Starting at line 570 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 656 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectOneHealthyInstance4() throws NacosException {
        //given
        Instance healthyInstance = new Instance();
        healthyInstance.setIp("1.1.1.1");
        healthyInstance.setPort(1000);
        List<Instance> hosts = new ArrayList<>();
        hosts.add(healthyInstance);
        ServiceInfo infoWithHealthyInstance = new ServiceInfo();
        infoWithHealthyInstance.setHosts(hosts);
        when(proxy.queryInstancesOfService(anyString(), anyString(), anyString(), anyInt(), anyBoolean()))
                .thenReturn(infoWithHealthyInstance);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 26 line (94 tokens) duplication in the following files: 
Starting at line 111 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 170 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java

        return grpcClientProxy.queryInstancesOfService(serviceName, groupName, clusters, udpPort, healthyOnly);
    }
    
    @Override
    public Service queryService(String serviceName, String groupName) throws NacosException {
        return null;
    }
    
    @Override
    public void createService(Service service, AbstractSelector selector) throws NacosException {
    
    }
    
    @Override
    public boolean deleteService(String serviceName, String groupName) throws NacosException {
        return false;
    }
    
    @Override
    public void updateService(Service service, AbstractSelector selector) throws NacosException {
    
    }
    
    @Override
    public ListView<String> getServiceList(int pageNo, int pageSize, String groupName, AbstractSelector selector)
            throws NacosException {
=====================================================================
Found a 26 line (94 tokens) duplication in the following files: 
Starting at line 112 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 177 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public Service queryService(String serviceName, String groupName) throws NacosException {
        return null;
    }
    
    @Override
    public void createService(Service service, AbstractSelector selector) throws NacosException {
    
    }
    
    @Override
    public boolean deleteService(String serviceName, String groupName) throws NacosException {
        return false;
    }
    
    @Override
    public void updateService(Service service, AbstractSelector selector) throws NacosException {
    
    }
    
    @Override
    public ListView<String> getServiceList(int pageNo, int pageSize, String groupName, AbstractSelector selector)
            throws NacosException {
        return grpcClientProxy.getServiceList(pageNo, pageSize, groupName, selector);
=====================================================================
Found a 25 line (93 tokens) duplication in the following files: 
Starting at line 171 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 177 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public Service queryService(String serviceName, String groupName) throws NacosException {
        return null;
    }
    
    @Override
    public void createService(Service service, AbstractSelector selector) throws NacosException {
    
    }
    
    @Override
    public boolean deleteService(String serviceName, String groupName) throws NacosException {
        return false;
    }
    
    @Override
    public void updateService(Service service, AbstractSelector selector) throws NacosException {
    
    }
    
    @Override
    public ListView<String> getServiceList(int pageNo, int pageSize, String groupName, AbstractSelector selector)
            throws NacosException {
=====================================================================
Found a 14 line (92 tokens) duplication in the following files: 
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testQueryInstancesOfService() throws NacosException, IllegalAccessException, NoSuchFieldException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
        
        String serviceName = "service1";
        String groupName = "group1";
        String clusters = "cluster1";
=====================================================================
Found a 13 line (91 tokens) duplication in the following files: 
Starting at line 550 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 570 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 634 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 656 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectOneHealthyInstance3() throws NacosException {
        //given
        Instance healthyInstance = new Instance();
        healthyInstance.setIp("1.1.1.1");
        healthyInstance.setPort(1000);
        List<Instance> hosts = new ArrayList<>();
        hosts.add(healthyInstance);
        ServiceInfo infoWithHealthyInstance = new ServiceInfo();
        infoWithHealthyInstance.setHosts(hosts);
        when(proxy.queryInstancesOfService(anyString(), anyString(), anyString(), anyInt(), anyBoolean()))
                .thenReturn(infoWithHealthyInstance);
        
        String serviceName = "service1";
=====================================================================
Found a 10 line (90 tokens) duplication in the following files: 
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 180 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        nacosNamingMaintainService.createService(serviceName, groupName, protectThreshold);
        //then
        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(groupName)
                        && Math.abs(service.getProtectThreshold() - protectThreshold) < 0.1f
                        && service.getMetadata().size() == 0;
            }
        }), argThat(o -> o instanceof NoneSelector));
=====================================================================
Found a 12 line (89 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 194 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
                    }
                }));
    }
    
    @Test
    public void testRegisterInstance2() throws NacosException {
=====================================================================
Found a 9 line (88 tokens) duplication in the following files: 
Starting at line 85 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.registerInstance(serviceName, ip, port);
        //then
        verify(proxy, times(1))
                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 9 line (88 tokens) duplication in the following files: 
Starting at line 192 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.deregisterInstance(serviceName, ip, port);
        //then
        verify(proxy, times(1)).deregisterService(eq(serviceName), eq(Constants.DEFAULT_GROUP),
                argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 11 line (88 tokens) duplication in the following files: 
Starting at line 228 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 258 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        ObjectMapper mapper = new ObjectMapper();
        JsonNode actualObj = mapper.readTree(jsonString);
        
        Mockito.when(proxy.sendBeat(beatInfo, false)).thenReturn(actualObj);
        BeatReactor beatReactor = new BeatReactor(proxy);
        String serviceName = "serviceName1";
        
        beatReactor.addBeatInfo(serviceName, beatInfo);
        TimeUnit.MILLISECONDS.sleep(12);
        Mockito.verify(proxy, Mockito.times(1)).sendBeat(beatInfo, false);
        TimeUnit.MILLISECONDS.sleep(12);
=====================================================================
Found a 10 line (88 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 235 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
=====================================================================
Found a 13 line (88 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 10 line (88 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 304 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByHttp() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingHttpClientProxy mockHttpClient = Mockito.mock(NamingHttpClientProxy.class);
        Field mockHttpClientField = NamingClientProxyDelegate.class.getDeclaredField("httpClientProxy");
        mockHttpClientField.setAccessible(true);
        mockHttpClientField.set(delegate, mockHttpClient);
=====================================================================
Found a 10 line (88 tokens) duplication in the following files: 
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 338 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testQueryInstancesOfService() throws NacosException, IllegalAccessException, NoSuchFieldException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
=====================================================================
Found a 8 line (87 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 172 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
        final long endTime = System.currentTimeMillis() + readTimeoutMs;
        String currentServerAddr = serverListMgr.getCurrentServerAddr();
        int maxRetry = this.maxRetry;
        HttpClientConfig httpConfig = HttpClientConfig.builder()
                .setReadTimeOutMillis(Long.valueOf(readTimeoutMs).intValue())
                .setConTimeOutMillis(ConfigHttpClientManager.getInstance().getConnectTimeoutOrDefault(100)).build();
=====================================================================
Found a 12 line (87 tokens) duplication in the following files: 
Starting at line 109 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 216 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
                    }
                }));
    }
    
    @Test
    public void testRegisterInstance3() throws NacosException {
=====================================================================
Found a 12 line (87 tokens) duplication in the following files: 
Starting at line 130 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 236 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(clusterName);
                    }
                }));
    }
    
    @Test
    public void testRegisterInstance4() throws NacosException {
=====================================================================
Found a 13 line (87 tokens) duplication in the following files: 
Starting at line 530 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 612 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectOneHealthyInstance2() throws NacosException {
        //given
        Instance healthyInstance = new Instance();
        healthyInstance.setIp("1.1.1.1");
        healthyInstance.setPort(1000);
        List<Instance> hosts = new ArrayList<>();
        hosts.add(healthyInstance);
        ServiceInfo infoWithHealthyInstance = new ServiceInfo();
        infoWithHealthyInstance.setHosts(hosts);
        when(proxy.subscribe(anyString(), anyString(), anyString())).thenReturn(infoWithHealthyInstance);
        
        String serviceName = "service1";
        String groupName = "group1";
=====================================================================
Found a 9 line (86 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 149 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.registerInstance(serviceName, groupName, ip, port);
        //then
        verify(proxy, times(1))
                .registerService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 9 line (86 tokens) duplication in the following files: 
Starting at line 213 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.deregisterInstance(serviceName, groupName, ip, port);
        //then
        verify(proxy, times(1))
                .deregisterService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 13 line (86 tokens) duplication in the following files: 
Starting at line 245 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 274 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

    public void testIntervalFromResponse() throws JsonProcessingException, NacosException, InterruptedException {
        BeatInfo beatInfo = new BeatInfo();
        beatInfo.setServiceName("test");
        beatInfo.setIp("11.11.11.11");
        beatInfo.setPort(1234);
        beatInfo.setCluster("clusterName");
        beatInfo.setWeight(1);
        beatInfo.setMetadata(new HashMap<String, String>());
        beatInfo.setScheduled(false);
        beatInfo.setPeriod(10L);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
        String jsonString = "{\"clientBeatInterval\":20}";
=====================================================================
Found a 12 line (85 tokens) duplication in the following files: 
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(clusterName);
                    }
                }));
    }
    
    @Test
    public void testRegisterInstance5() throws NacosException {
=====================================================================
Found a 14 line (85 tokens) duplication in the following files: 
Starting at line 43 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\PushReceiverTest.java
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\PushReceiverTest.java
Starting at line 111 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\PushReceiverTest.java

    public void testTestRunDomAndService() throws InterruptedException, IOException {
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        final PushReceiver pushReceiver = new PushReceiver(holder);
        final ExecutorService executorService = Executors.newFixedThreadPool(1);
        executorService.submit(new Runnable() {
            @Override
            public void run() {
                pushReceiver.run();
            }
        });
        TimeUnit.MILLISECONDS.sleep(10);
        
        PushReceiver.PushPacket pack1 = new PushReceiver.PushPacket();
        pack1.type = "dom";
=====================================================================
Found a 10 line (84 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        result.setCode(200);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        //when
        boolean ret = securityProxy.login("localhost");
        //then
        Assert.assertTrue(ret);
=====================================================================
Found a 12 line (83 tokens) duplication in the following files: 
Starting at line 511 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 530 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 592 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 612 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectOneHealthyInstance1() throws NacosException {
        //given
        Instance healthyInstance = new Instance();
        healthyInstance.setIp("1.1.1.1");
        healthyInstance.setPort(1000);
        List<Instance> hosts = new ArrayList<>();
        hosts.add(healthyInstance);
        ServiceInfo infoWithHealthyInstance = new ServiceInfo();
        infoWithHealthyInstance.setHosts(hosts);
        when(proxy.subscribe(anyString(), anyString(), anyString())).thenReturn(infoWithHealthyInstance);
        
        String serviceName = "service1";
=====================================================================
Found a 9 line (83 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 126 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        result.setData("{\"accessToken\":\"ttttttttttttttttt\",\"tokenTtl\":1000}");
        result.setCode(200);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        //when
        securityProxy.login(Collections.singletonList("localhost"));
=====================================================================
Found a 10 line (82 tokens) duplication in the following files: 
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 322 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 338 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testQueryInstancesOfService() throws NacosException, IllegalAccessException, NoSuchFieldException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
=====================================================================
Found a 10 line (80 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 322 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 338 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
=====================================================================
Found a 10 line (80 tokens) duplication in the following files: 
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 235 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testQueryInstancesOfService() throws NacosException, IllegalAccessException, NoSuchFieldException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        NamingGrpcClientProxy mockGrpcClient = Mockito.mock(NamingGrpcClientProxy.class);
        Field grpcClientProxyField = NamingClientProxyDelegate.class.getDeclaredField("grpcClientProxy");
        grpcClientProxyField.setAccessible(true);
        grpcClientProxyField.set(delegate, mockGrpcClient);
=====================================================================
Found a 8 line (80 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 89 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        result.setCode(400);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        
        boolean ret = securityProxy.login("localhost");
=====================================================================
Found a 7 line (79 tokens) duplication in the following files: 
Starting at line 40 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 126 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        result.setData("{\"accessToken\":\"ttttttttttttttttt\",\"tokenTtl\":1000}");
        result.setCode(200);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
=====================================================================
Found a 12 line (78 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 109 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 194 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 216 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
                    }
                }));
    }
    
    @Test
    public void testRegisterInstance2() throws NacosException {
=====================================================================
Found a 12 line (78 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 245 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 274 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

    public void testAddBeatInfo() throws NacosException, InterruptedException {
        BeatInfo beatInfo = new BeatInfo();
        beatInfo.setServiceName("test");
        beatInfo.setIp("11.11.11.11");
        beatInfo.setPort(1234);
        beatInfo.setCluster("clusterName");
        beatInfo.setWeight(1);
        beatInfo.setMetadata(new HashMap<String, String>());
        beatInfo.setScheduled(false);
        beatInfo.setPeriod(10L);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
=====================================================================
Found a 13 line (78 tokens) duplication in the following files: 
Starting at line 215 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 245 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 274 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

    public void testLightBeatFromResponse() throws InterruptedException, NacosException, JsonProcessingException {
        BeatInfo beatInfo = new BeatInfo();
        beatInfo.setServiceName("test");
        beatInfo.setIp("11.11.11.11");
        beatInfo.setPort(1234);
        beatInfo.setCluster("clusterName");
        beatInfo.setWeight(1);
        beatInfo.setMetadata(new HashMap<String, String>());
        beatInfo.setScheduled(false);
        beatInfo.setPeriod(10L);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
        String jsonString = "{\"lightBeatEnabled\":true,\"clientBeatInterval\":10}";
=====================================================================
Found a 12 line (77 tokens) duplication in the following files: 
Starting at line 222 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 282 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

    public List<Instance> getAllInstances(String serviceName, String groupName, List<String> clusters,
            boolean subscribe) throws NacosException {
        ServiceInfo serviceInfo;
        String clusterString = StringUtils.join(clusters, ",");
        if (subscribe) {
            serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
            if (null == serviceInfo) {
                serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
            }
        } else {
            serviceInfo = clientProxy.queryInstancesOfService(serviceName, groupName, clusterString, 0, false);
        }
=====================================================================
Found a 9 line (76 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

        List<Listener> listeners = clientWorker.getCache(dataId, group).getListeners();
        Assert.assertEquals(1, listeners.size());
        Assert.assertEquals(listener, listeners.get(0));
        
        clientWorker.removeTenantListener(dataId, group, listener);
        listeners = clientWorker.getCache(dataId, group).getListeners();
        Assert.assertEquals(0, listeners.size());
        
        String content = "d";
=====================================================================
Found a 6 line (76 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 236 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 6 line (76 tokens) duplication in the following files: 
Starting at line 130 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 194 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(clusterName);
=====================================================================
Found a 12 line (76 tokens) duplication in the following files: 
Starting at line 130 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 236 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(clusterName);
                    }
                }));
    }
    
    @Test
    public void testRegisterInstance4() throws NacosException {
=====================================================================
Found a 7 line (75 tokens) duplication in the following files: 
Starting at line 154 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 196 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        params.put(CommonParams.SERVICE_NAME, groupedServiceName);
        params.put(CommonParams.GROUP_NAME, groupName);
        params.put(CommonParams.CLUSTER_NAME, instance.getClusterName());
        params.put(IP_PARAM, instance.getIp());
        params.put(PORT_PARAM, String.valueOf(instance.getPort()));
        params.put(WEIGHT_PARAM, String.valueOf(instance.getWeight()));
        params.put("enable", String.valueOf(instance.isEnabled()));
=====================================================================
Found a 15 line (75 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtilTest.java
Starting at line 29 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtilTest.java

public class ConcurrentDiskUtilTest {
    
    @Test
    public void testReadAndWrite() throws IOException {
        File tempFile = File.createTempFile("aaa", "bbb");
        String fileName = tempFile.getAbsolutePath();
        String content = "hello";
        String charset = "UTF-8";
        ConcurrentDiskUtil.writeFileContent(fileName, content, charset);
        String actualContent = ConcurrentDiskUtil.getFileContent(fileName, charset);
        Assert.assertEquals(content, actualContent);
    }
    
    @Test
    public void testByteBufferToString() throws IOException {
=====================================================================
Found a 12 line (75 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 215 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

    public void testAddBeatInfo() throws NacosException, InterruptedException {
        BeatInfo beatInfo = new BeatInfo();
        beatInfo.setServiceName("test");
        beatInfo.setIp("11.11.11.11");
        beatInfo.setPort(1234);
        beatInfo.setCluster("clusterName");
        beatInfo.setWeight(1);
        beatInfo.setMetadata(new HashMap<String, String>());
        beatInfo.setScheduled(false);
        beatInfo.setPeriod(10L);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
=====================================================================
Found a 15 line (75 tokens) duplication in the following files: 
Starting at line 659 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 685 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testGetNamespaceId() {
        //given
        //        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        //        HttpRestResult<Object> a = new HttpRestResult<Object>();
        //        a.setData("");
        //        a.setCode(200);
        //        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        String namespaceId = "aaa";
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy(namespaceId, proxy, mgr, props, holder);
=====================================================================
Found a 6 line (74 tokens) duplication in the following files: 
Starting at line 109 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 6 line (74 tokens) duplication in the following files: 
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 216 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(clusterName);
=====================================================================
Found a 15 line (73 tokens) duplication in the following files: 
Starting at line 659 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 685 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 699 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 720 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testGetNamespaceId() {
        //given
        //        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        //        HttpRestResult<Object> a = new HttpRestResult<Object>();
        //        a.setData("");
        //        a.setCode(200);
        //        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        String namespaceId = "aaa";
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy(namespaceId, proxy, mgr, props, holder);
=====================================================================
Found a 6 line (73 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        result.setCode(400);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
=====================================================================
Found a 12 line (72 tokens) duplication in the following files: 
Starting at line 128 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 162 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        expectInfo.setServiceName(serviceName);
        expectInfo.setIp(ip);
        expectInfo.setPort(port);
        expectInfo.setCluster(clusterName);
        expectInfo.setWeight(weight);
        expectInfo.setMetadata(meta);
        expectInfo.setScheduled(false);
        expectInfo.setPeriod(Constants.DEFAULT_HEART_BEAT_INTERVAL);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
        BeatReactor beatReactor = new BeatReactor(proxy);
        assertBeatInfoEquals(expectInfo, beatReactor.buildBeatInfo(instance));
=====================================================================
Found a 8 line (71 tokens) duplication in the following files: 
Starting at line 197 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\beat\BeatReactor.java
Starting at line 300 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

                    Instance instance = new Instance();
                    instance.setPort(beatInfo.getPort());
                    instance.setIp(beatInfo.getIp());
                    instance.setWeight(beatInfo.getWeight());
                    instance.setMetadata(beatInfo.getMetadata());
                    instance.setClusterName(beatInfo.getCluster());
                    instance.setServiceName(beatInfo.getServiceName());
                    instance.setInstanceId(instance.getInstanceId());
=====================================================================
Found a 10 line (71 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 100 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 129 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 158 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 189 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 221 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 248 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 277 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 307 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 336 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 366 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 397 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 430 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 459 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
=====================================================================
Found a 7 line (70 tokens) duplication in the following files: 
Starting at line 232 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 253 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        nacosNamingMaintainService.updateService(serviceName, groupName, protectThreshold);
        //then
        verify(serverProxy, times(1)).updateService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(groupName)
                        && Math.abs(service.getProtectThreshold() - protectThreshold) < 0.1f;
=====================================================================
Found a 16 line (69 tokens) duplication in the following files: 
Starting at line 85 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 101 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

        if (StringUtils.isBlank(dataId) || !ParamUtils.isValid(dataId)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, DATAID_INVALID_MSG);
        }
        if (StringUtils.isBlank(group) || !ParamUtils.isValid(group)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, GROUP_INVALID_MSG);
        }
    }
    
    /**
     * Check key param.
     *
     * @param dataId dataId
     * @param group  group
     * @throws NacosException nacos exception
     */
    public static void checkKeyParam(String dataId, String group) throws NacosException {
=====================================================================
Found a 6 line (69 tokens) duplication in the following files: 
Starting at line 162 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 182 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 255 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(groupName)
                        && Math.abs(service.getProtectThreshold() - protectThreshold) < 0.1f
                        && service.getMetadata().size() == 0;
=====================================================================
Found a 9 line (68 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java
Starting at line 49 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java

    public void testRegisterListener() {
        String group = "a";
        String name = "b";
        String clusters = "c";
        InstancesChangeNotifier instancesChangeNotifier = new InstancesChangeNotifier();
        EventListener listener = Mockito.mock(EventListener.class);
        instancesChangeNotifier.registerListener(group, name, clusters, listener);
        List<ServiceInfo> subscribeServices = instancesChangeNotifier.getSubscribeServices();
        Assert.assertEquals(1, subscribeServices.size());
=====================================================================
Found a 11 line (67 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 188 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

                        .get(getUrl(currentServerAddr, path), httpConfig, newHeaders, query, String.class);
                if (isFail(result)) {
                    LOGGER.error("[NACOS ConnectException] currentServerAddr: {}, httpCode: {}",
                            serverListMgr.getCurrentServerAddr(), result.getCode());
                } else {
                    // Update the currently available server addr
                    serverListMgr.updateCurrentServerAddr(currentServerAddr);
                    return result;
                }
            } catch (ConnectException connectException) {
                LOGGER.error("[NACOS ConnectException httpGet] currentServerAddr:{}, err : {}",
=====================================================================
Found a 7 line (66 tokens) duplication in the following files: 
Starting at line 141 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 180 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        nacosNamingMaintainService.createService(serviceName, groupName);
        //then
        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(groupName)
                        && Math.abs(service.getProtectThreshold() - Constants.DEFAULT_PROTECT_THRESHOLD) < 0.1f
=====================================================================
Found a 8 line (66 tokens) duplication in the following files: 
Starting at line 489 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 522 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 555 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 625 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testReqApi() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenAnswer(invocationOnMock -> {
            //return url
            HttpRestResult<Object> res = new HttpRestResult<Object>();
            res.setData(invocationOnMock.getArgument(0));
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 194 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 6 line (65 tokens) duplication in the following files: 
Starting at line 109 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 130 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 216 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 236 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

                .registerService(eq(serviceName), eq(groupName), argThat(new ArgumentMatcher<Instance>() {
                    @Override
                    public boolean matches(Instance instance) {
                        return instance.getIp().equals(ip) && instance.getPort() == port
                                && Math.abs(instance.getWeight() - 1.0) < 0.01f && instance.getClusterName()
                                .equals(Constants.DEFAULT_CLUSTER_NAME);
=====================================================================
Found a 6 line (63 tokens) duplication in the following files: 
Starting at line 594 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 627 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenAnswer(invocationOnMock -> {
            //return url
            HttpRestResult<Object> res = new HttpRestResult<Object>();
            res.setMessage("fail");
=====================================================================
Found a 14 line (62 tokens) duplication in the following files: 
Starting at line 141 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 134 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

        }
        FileChannel channel = null;
        FileLock lock = null;
        RandomAccessFile raf = null;
        try {
            raf = new RandomAccessFile(file, READ_WRITE);
            channel = raf.getChannel();
            int i = 0;
            do {
                try {
                    lock = channel.tryLock();
                } catch (Exception e) {
                    ++i;
                    if (i > RETRY_COUNT) {
=====================================================================
Found a 7 line (62 tokens) duplication in the following files: 
Starting at line 100 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

    public static void checkKeyParam(String dataId, String group) throws NacosException {
        if (StringUtils.isBlank(dataId) || !ParamUtils.isValid(dataId)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, DATAID_INVALID_MSG);
        }
        if (StringUtils.isBlank(group) || !ParamUtils.isValid(group)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, GROUP_INVALID_MSG);
        }
=====================================================================
Found a 10 line (61 tokens) duplication in the following files: 
Starting at line 116 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        String clusterName = "cluster1";
        
        Map<String, String> meta = new HashMap<>();
        Instance instance = new Instance();
        instance.setServiceName(serviceName);
        instance.setIp(ip);
        instance.setPort(port);
        instance.setWeight(weight);
        instance.setMetadata(meta);
        instance.setClusterName(clusterName);
=====================================================================
Found a 6 line (61 tokens) duplication in the following files: 
Starting at line 491 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 524 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 557 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 594 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenAnswer(invocationOnMock -> {
            //return url
            HttpRestResult<Object> res = new HttpRestResult<Object>();
            res.setData(invocationOnMock.getArgument(0));
=====================================================================
Found a 8 line (60 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 47 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java

        Map<String, ConfigChangeItem> map = parser.doParse("app.name = nacos", "", type);
        Assert.assertEquals("nacos", map.get("app.name").getOldValue());
        Assert.assertNull(map.get("app.name").getNewValue());
    }
    
    @Test
    public void testModifyKey() throws IOException {
        Map<String, ConfigChangeItem> map = parser.doParse("app.name = rocketMQ", "app.name = nacos", type);
=====================================================================
Found a 8 line (59 tokens) duplication in the following files: 
Starting at line 416 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 439 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

        if (!cacheData.isUseLocalConfigInfo() && path.exists()) {
            String content = LocalConfigInfoProcessor.getFailover(agentName, dataId, group, tenant);
            final String md5 = MD5Utils.md5Hex(content, Constants.ENCODE);
            cacheData.setUseLocalConfigInfo(true);
            cacheData.setLocalConfigInfoVersion(path.lastModified());
            cacheData.setContent(content);
            
            LOGGER.warn(
=====================================================================
Found a 10 line (59 tokens) duplication in the following files: 
Starting at line 511 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 530 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 550 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 570 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 592 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 612 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 634 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 656 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectOneHealthyInstance1() throws NacosException {
        //given
        Instance healthyInstance = new Instance();
        healthyInstance.setIp("1.1.1.1");
        healthyInstance.setPort(1000);
        List<Instance> hosts = new ArrayList<>();
        hosts.add(healthyInstance);
        ServiceInfo infoWithHealthyInstance = new ServiceInfo();
        infoWithHealthyInstance.setHosts(hosts);
        when(proxy.subscribe(anyString(), anyString(), anyString())).thenReturn(infoWithHealthyInstance);
=====================================================================
Found a 9 line (59 tokens) duplication in the following files: 
Starting at line 195 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testCreateService() throws NacosException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        Service service = new Service();
        try {
            delegate.createService(service, new NoneSelector());
=====================================================================
Found a 11 line (58 tokens) duplication in the following files: 
Starting at line 139 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

            try {
                File parentFile = file.getParentFile();
                if (!parentFile.exists()) {
                    boolean isMdOk = parentFile.mkdirs();
                    if (!isMdOk) {
                        LOGGER.error("[{}] save snapshot error", envName);
                    }
                }
                
                if (JvmUtil.isMultiInstance()) {
                    ConcurrentDiskUtil.writeFileContent(file, config, Constants.ENCODE);
=====================================================================
Found a 6 line (58 tokens) duplication in the following files: 
Starting at line 85 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

        if (StringUtils.isBlank(dataId) || !ParamUtils.isValid(dataId)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, DATAID_INVALID_MSG);
        }
        if (StringUtils.isBlank(group) || !ParamUtils.isValid(group)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, GROUP_INVALID_MSG);
        }
=====================================================================
Found a 13 line (58 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigResponseTest.java
Starting at line 46 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigResponseTest.java

    public void testGetterAndSetter() {
        ConfigResponse configResponse = new ConfigResponse();
        String dataId = "id";
        String group = "group";
        String tenant = "n";
        String content = "abc";
        
        configResponse.setContent(content);
        configResponse.setDataId(dataId);
        configResponse.setGroup(group);
        configResponse.setTenant(tenant);
        
        Assert.assertEquals(dataId, configResponse.getDataId());
=====================================================================
Found a 8 line (58 tokens) duplication in the following files: 
Starting at line 39 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 40 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java

        Map<String, ConfigChangeItem> map = parser.doParse("", "app.name = nacos", type);
        Assert.assertNull(map.get("app.name").getOldValue());
        Assert.assertEquals("nacos", map.get("app.name").getNewValue());
    }
    
    @Test
    public void testRemoveKey() throws IOException {
        Map<String, ConfigChangeItem> map = parser.doParse("app.name = nacos", "", type);
=====================================================================
Found a 5 line (58 tokens) duplication in the following files: 
Starting at line 162 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 182 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(groupName)
                        && Math.abs(service.getProtectThreshold() - protectThreshold) < 0.1f
=====================================================================
Found a 7 line (58 tokens) duplication in the following files: 
Starting at line 177 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 417 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.GET), any());
        Assert.assertEquals(groupName + "@@" + serviceName, serviceInfo.getName());
        Assert.assertEquals(clusters, serviceInfo.getClusters());
    }
    
    @Test
    public void testQueryService() throws Exception {
=====================================================================
Found a 13 line (58 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        
        boolean ret = securityProxy.login("localhost");
        
        Assert.assertFalse(ret);
    }
    
    @Test
    public void testTestLoginFailHttp() throws Exception {
=====================================================================
Found a 16 line (57 tokens) duplication in the following files: 
Starting at line 230 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\DiskCache.java

                                NAMING_LOGGER.error("[NA] error while parsing cached dom : " + json, e);
                            }
                        }
                        
                    } catch (Exception e) {
                        NAMING_LOGGER.error("[NA] failed to read cache for dom: " + file.getName(), e);
                    } finally {
                        try {
                            if (reader != null) {
                                reader.close();
                            }
                        } catch (Exception e) {
                            //ignore
                        }
                    }
                    if (!CollectionUtils.isEmpty(dom.getHosts())) {
=====================================================================
Found a 6 line (57 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 87 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

        clientWorker.addListeners(dataId, group, Arrays.asList(listener));
        List<Listener> listeners = clientWorker.getCache(dataId, group).getListeners();
        Assert.assertEquals(1, listeners.size());
        Assert.assertEquals(listener, listeners.get(0));
        
        clientWorker.removeListener(dataId, group, listener);
=====================================================================
Found a 19 line (54 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\filter\impl\ConfigRequest.java
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\filter\impl\ConfigResponse.java

        param.put(TYPE, type);
    }
    
    @Override
    public Object getParameter(String key) {
        return param.get(key);
    }
    
    @Override
    public void putParameter(String key, Object value) {
        param.put(key, value);
    }
    
    @Override
    public IConfigContext getConfigContext() {
        return configContext;
    }
    
}
=====================================================================
Found a 5 line (54 tokens) duplication in the following files: 
Starting at line 143 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 255 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(groupName)
                        && Math.abs(service.getProtectThreshold() - Constants.DEFAULT_PROTECT_THRESHOLD) < 0.1f
=====================================================================
Found a 6 line (54 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateServiceTest.java
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateServiceTest.java

        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        NamingClientProxy proxy = Mockito.mock(NamingClientProxy.class);
        Mockito.when(proxy.queryInstancesOfService(serviceName, group, clusters, 0, false)).thenReturn(info);
        
        InstancesChangeNotifier notifyer = Mockito.mock(InstancesChangeNotifier.class);
        Properties prop = new Properties();
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 174 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 193 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        String type = ConfigType.getDefaultType().getType();
        
        Mockito.when(mockWoker.publishConfig(dataId, group, namespace, null, null, null, content, null, casMd5, type))
                .thenReturn(true);
        
        final boolean b = nacosConfigService.publishConfigCas(dataId, group, content, casMd5);
=====================================================================
Found a 6 line (53 tokens) duplication in the following files: 
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 141 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 180 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        nacosNamingMaintainService.createService(serviceName);
        //then
        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(Constants.DEFAULT_GROUP)
=====================================================================
Found a 11 line (52 tokens) duplication in the following files: 
Starting at line 95 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 204 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

                LOGGER.error("[NACOS Exception httpGet] currentServerAddr: " + serverListMgr.getCurrentServerAddr(),
                        ex);
                throw ex;
            }
            
            if (serverListMgr.getIterator().hasNext()) {
                currentServerAddr = serverListMgr.getIterator().next();
            } else {
                maxRetry--;
                if (maxRetry < 0) {
                    throw new ConnectException(
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 190 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java
Starting at line 207 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java

    public void subscriberRegistered(String serviceName, String groupName, String cluster) {
        String key = ServiceInfo.getKey(NamingUtils.getGroupedName(serviceName, groupName), cluster);
        synchronized (subscribes) {
            SubscriberRedoData redoData = subscribes.get(key);
            if (null != redoData) {
                redoData.setRegistered(true);
=====================================================================
Found a 6 line (52 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 235 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 304 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 204 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java
Starting at line 214 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java

    public void testSubscribe() throws Exception {
        SubscribeServiceResponse res = new SubscribeServiceResponse();
        ServiceInfo info = new ServiceInfo(GROUP_NAME + "@@" + SERVICE_NAME + "@@" + CLUSTERS);
        res.setServiceInfo(info);
        when(this.rpcClient.request(any())).thenReturn(res);
=====================================================================
Found a 5 line (52 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 102 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 131 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 191 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 223 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 250 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 279 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 309 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 338 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 368 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 399 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 432 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 461 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 667 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 686 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 700 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 721 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
        Properties props = new Properties();
        ServiceInfoHolder holder = mock(ServiceInfoHolder.class);
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

        File file = getEncryptDataKeyFailoverFile(envName, dataId, group, tenant);
        if (!file.exists() || !file.isFile()) {
            return null;
        }
        
        try {
            return readFile(file);
        } catch (IOException ioe) {
            LOGGER.error("[" + envName + "] get failover error, " + file, ioe);
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 197 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java

                try {
                    File cacheDir = new File(failoverDir);
                    
                    if (!cacheDir.exists() && !cacheDir.mkdirs()) {
                        throw new IllegalStateException("failed to create cache dir: " + failoverDir);
                    }
                    
                    File[] files = cacheDir.listFiles();
                    if (files == null || files.length <= 0) {
=====================================================================
Found a 4 line (51 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifier.java
Starting at line 77 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifier.java

    public void registerListener(String groupName, String serviceName, String clusters, EventListener listener) {
        String key = ServiceInfo.getKey(NamingUtils.getGroupedName(serviceName, groupName), clusters);
        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);
        if (eventListeners == null) {
=====================================================================
Found a 9 line (51 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java
Starting at line 122 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java

        final String webContext = properties.getProperty(PropertyKeyConst.CONTEXT_PATH);
        TemplateUtils.stringNotEmptyAndThenExecute(webContext, new Runnable() {
            @Override
            public void run() {
                UtilAndComs.webContext = ContextPathUtil.normalizeContextPath(webContext);
                UtilAndComs.nacosUrlBase = UtilAndComs.webContext + "/v1/ns";
                UtilAndComs.nacosUrlInstance = UtilAndComs.nacosUrlBase + "/instance";
            }
        });
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 138 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        String type = ConfigType.getDefaultType().getType();
        Mockito.when(mockWoker.publishConfig(dataId, group, namespace, null, null, null, content, null, null, type))
                .thenReturn(true);
        
        final boolean b = nacosConfigService.publishConfig(dataId, group, content);
=====================================================================
Found a 7 line (51 tokens) duplication in the following files: 
Starting at line 184 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 195 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testQueryService() throws NacosException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
        Service service = delegate.queryService("a", "b");
=====================================================================
Found a 5 line (51 tokens) duplication in the following files: 
Starting at line 124 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java
Starting at line 136 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java

        client.registerService(SERVICE_NAME, GROUP_NAME, instance);
        verify(this.rpcClient, times(1)).request(argThat(request -> {
            if (request instanceof InstanceRequest) {
                InstanceRequest request1 = (InstanceRequest) request;
                return request1.getType().equals(NamingRemoteConstants.REGISTER_INSTANCE);
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\NacosConfigService.java
Starting at line 183 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\NacosConfigService.java

                    worker.getAgentName(), dataId, group, tenant, ContentUtils.truncateContent(content));
            cr.setContent(content);
            String encryptedDataKey = LocalEncryptedDataKeyProcessor
                    .getEncryptDataKeyFailover(agent.getName(), dataId, group, tenant);
            cr.setEncryptedDataKey(encryptedDataKey);
            configFilterChainManager.doFilter(null, cr);
            content = cr.getContent();
            return content;
        }
=====================================================================
Found a 9 line (50 tokens) duplication in the following files: 
Starting at line 390 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java
Starting at line 407 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java

    public CacheData(ConfigFilterChainManager configFilterChainManager, String name, String dataId, String group) {
        if (null == dataId || null == group) {
            throw new IllegalArgumentException("dataId=" + dataId + ", group=" + group);
        }
        this.name = name;
        this.configFilterChainManager = configFilterChainManager;
        this.dataId = dataId;
        this.group = group;
        this.tenant = TenantUtil.getUserTenantForAcm();
=====================================================================
Found a 12 line (50 tokens) duplication in the following files: 
Starting at line 211 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

        CacheData cache = getCache(dataId, group);
        if (null != cache) {
            synchronized (cache) {
                cache.removeListener(listener);
                if (cache.getListeners().isEmpty()) {
                    cache.setSyncWithServer(false);
                    agent.removeCache(dataId, group);
                }
            }
            
        }
    }
=====================================================================
Found a 4 line (50 tokens) duplication in the following files: 
Starting at line 178 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 212 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        final Map<String, String> params = new HashMap<String, String>(8);
        params.put(CommonParams.NAMESPACE_ID, namespaceId);
        params.put(CommonParams.SERVICE_NAME, NamingUtils.getGroupedName(serviceName, groupName));
        params.put(CommonParams.CLUSTER_NAME, instance.getClusterName());
=====================================================================
Found a 16 line (50 tokens) duplication in the following files: 
Starting at line 30 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\DemoFilter1.java
Starting at line 30 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\DemoFilter2.java

    private static final String DEFAULT_NAME = DemoFilter1.class.getName();
    
    @Override
    public void init(IFilterConfig filterConfig) {
    
    }
    
    @Override
    public void init(Properties properties) {
    
    }
    
    @Override
    public void doFilter(IConfigRequest request, IConfigResponse response, IConfigFilterChain filterChain)
            throws NacosException {
        request.putParameter("filter1", DEFAULT_NAME);
=====================================================================
Found a 7 line (50 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

    public void testAddListenerWithoutTenant() throws NacosException {
        Properties prop = new Properties();
        ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
        ServerListManager agent = Mockito.mock(ServerListManager.class);
        ClientWorker clientWorker = new ClientWorker(filter, agent, prop);
        String dataId = "a";
        String group = "b";
=====================================================================
Found a 8 line (50 tokens) duplication in the following files: 
Starting at line 89 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 219 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 249 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 278 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        beatInfo.setPort(port);
        beatInfo.setCluster("clusterName");
        beatInfo.setWeight(1);
        beatInfo.setMetadata(new HashMap<String, String>());
        beatInfo.setScheduled(false);
        beatInfo.setPeriod(10L);
        
        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
=====================================================================
Found a 11 line (49 tokens) duplication in the following files: 
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\beat\BeatReactor.java

    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        NAMING_LOGGER.info("{} do shutdown begin", className);
        ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
        NAMING_LOGGER.info("{} do shutdown stop", className);
    }
    
    class SwitchRefresher implements Runnable {
=====================================================================
Found a 6 line (49 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialServiceTest.java
Starting at line 92 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialServiceTest.java

    public void testFree() throws NoSuchFieldException, IllegalAccessException {
        CredentialService credentialService1 = CredentialService.getInstance();
        CredentialWatcher mockWatcher = mock(CredentialWatcher.class);
        Field watcherField = CredentialService.class.getDeclaredField("watcher");
        watcherField.setAccessible(true);
        watcherField.set(credentialService1, mockWatcher);
=====================================================================
Found a 9 line (49 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateServiceTest.java
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateServiceTest.java

    public void testScheduleUpdateIfAbsent() throws InterruptedException, NacosException {
        String serviceName = "aa";
        String group = "bb";
        String clusters = "cc";
        ServiceInfo info = new ServiceInfo();
        info.setName(serviceName);
        info.setGroupName(group);
        info.setClusters(clusters);
        info.setLastRefTime(System.currentTimeMillis());
=====================================================================
Found a 9 line (49 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        //when
        boolean ret = securityProxy.login("localhost");
        //then
        Assert.assertTrue(ret);
=====================================================================
Found a 5 line (48 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 180 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 197 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        params.put(CommonParams.GROUP_NAME, groupName);
        params.put(CommonParams.CLUSTER_NAME, instance.getClusterName());
        params.put(IP_PARAM, instance.getIp());
        params.put(PORT_PARAM, String.valueOf(instance.getPort()));
        params.put(WEIGHT_PARAM, String.valueOf(instance.getWeight()));
=====================================================================
Found a 5 line (48 tokens) duplication in the following files: 
Starting at line 161 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 202 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        params.put(HEALTHY_PARAM, String.valueOf(instance.isHealthy()));
        params.put(EPHEMERAL_PARAM, String.valueOf(instance.isEphemeral()));
        params.put(META_PARAM, JacksonUtils.toJson(instance.getMetadata()));
        
        reqApi(UtilAndComs.nacosUrlInstance, params, HttpMethod.POST);
=====================================================================
Found a 9 line (48 tokens) duplication in the following files: 
Starting at line 142 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        final boolean b = nacosConfigService.publishConfig(dataId, group, content);
        Assert.assertTrue(b);
        
        Mockito.verify(mockWoker, Mockito.times(1))
                .publishConfig(dataId, group, namespace, null, null, null, content, null, null, type);
    }
    
    @Test
    public void testPublishConfig2() throws NacosException {
=====================================================================
Found a 9 line (48 tokens) duplication in the following files: 
Starting at line 179 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 198 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        final boolean b = nacosConfigService.publishConfigCas(dataId, group, content, casMd5);
        Assert.assertTrue(b);
        
        Mockito.verify(mockWoker, Mockito.times(1))
                .publishConfig(dataId, group, namespace, null, null, null, content, null, casMd5, type);
    }
    
    @Test
    public void testPublishConfigCas2() throws NacosException {
=====================================================================
Found a 9 line (48 tokens) duplication in the following files: 
Starting at line 128 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 146 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

                return service.getName().equals(serviceName) && service.getGroupName().equals(Constants.DEFAULT_GROUP)
                        && Math.abs(service.getProtectThreshold() - Constants.DEFAULT_PROTECT_THRESHOLD) < 0.1f
                        && service.getMetadata().size() == 0;
            }
        }), argThat(o -> o instanceof NoneSelector));
    }
    
    @Test
    public void testCreateService2() throws NacosException {
=====================================================================
Found a 6 line (48 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\cache\ServiceInfoHolderTest.java
Starting at line 95 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\cache\ServiceInfoHolderTest.java

        ServiceInfo info = new ServiceInfo("a@@b@@c");
        Instance instance1 = createInstance("1.1.1.1", 1);
        Instance instance2 = createInstance("1.1.1.2", 2);
        List<Instance> hosts = new ArrayList<>();
        hosts.add(instance1);
        hosts.add(instance2);
=====================================================================
Found a 6 line (48 tokens) duplication in the following files: 
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 184 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 195 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 210 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testUpdateInstance() throws NacosException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
=====================================================================
Found a 7 line (47 tokens) duplication in the following files: 
Starting at line 247 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

        String groupKey = GroupKey.getKey(dataId, group);
        synchronized (cacheMap) {
            Map<String, CacheData> copy = new HashMap<String, CacheData>(cacheMap.get());
            copy.remove(groupKey);
            cacheMap.set(copy);
        }
        LOGGER.info("[{}] [unsubscribe] {}", this.agent.getName(), groupKey);
=====================================================================
Found a 9 line (47 tokens) duplication in the following files: 
Starting at line 91 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

        File file = getSnapshotFile(name, dataId, group, tenant);
        if (!file.exists() || !file.isFile()) {
            return null;
        }
        
        try {
            return readFile(file);
        } catch (IOException ioe) {
            LOGGER.error("[" + name + "]+get snapshot error, " + file, ioe);
=====================================================================
Found a 12 line (47 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 49 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    @Override
    public void onEvent(ServerListChangedEvent event) {
        // do nothing in http client
    }
    
    @Override
    public Class<? extends Event> subscribeType() {
        return ServerListChangedEvent.class;
    }
    
    @Override
    public void registerService(String serviceName, String groupName, Instance instance) throws NacosException {
=====================================================================
Found a 9 line (47 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java
Starting at line 45 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java
Starting at line 59 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java

    public void testReceiveConfigInfo() {
        final Deque<Properties> q2 = new ArrayDeque<Properties>();
        PropertiesListener a = new PropertiesListener() {
            @Override
            public void innerReceive(Properties properties) {
                q2.offer(properties);
            }
        };
        a.receiveConfigInfo("foo=bar");
=====================================================================
Found a 11 line (47 tokens) duplication in the following files: 
Starting at line 732 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 810 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSubscribe4() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
=====================================================================
Found a 5 line (47 tokens) duplication in the following files: 
Starting at line 154 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java
Starting at line 205 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java

        QueryServiceResponse res = new QueryServiceResponse();
        ServiceInfo info = new ServiceInfo(GROUP_NAME + "@@" + SERVICE_NAME + "@@" + CLUSTERS);
        res.setServiceInfo(info);
        when(this.rpcClient.request(any())).thenReturn(res);
        ServiceInfo actual = client.queryInstancesOfService(SERVICE_NAME, GROUP_NAME, CLUSTERS, 0, false);
=====================================================================
Found a 11 line (46 tokens) duplication in the following files: 
Starting at line 95 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 150 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 204 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

                LOGGER.error("[NACOS Exception httpGet] currentServerAddr: " + serverListMgr.getCurrentServerAddr(),
                        ex);
                throw ex;
            }
            
            if (serverListMgr.getIterator().hasNext()) {
                currentServerAddr = serverListMgr.getIterator().next();
            } else {
                maxRetry--;
                if (maxRetry < 0) {
                    throw new ConnectException(
=====================================================================
Found a 11 line (46 tokens) duplication in the following files: 
Starting at line 180 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\Chooser.java
Starting at line 212 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\Chooser.java

        @Override
        public boolean equals(Object other) {
            if (this == other) {
                return true;
            }
            if (other == null) {
                return false;
            }
            if (getClass() != other.getClass()) {
                return false;
            }
=====================================================================
Found a 5 line (46 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 44 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 116 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

    public void testConstruct() throws NacosException {
        Properties prop = new Properties();
        ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
        ServerListManager agent = Mockito.mock(ServerListManager.class);
        ClientWorker clientWorker = new ClientWorker(filter, agent, prop);
=====================================================================
Found a 4 line (46 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java
Starting at line 68 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java

    public void testAddDay() throws NacosException {
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Mockito.when(holder.getServiceInfoMap()).thenReturn(new HashMap<>());
        FailoverReactor failoverReactor = new FailoverReactor(holder, "/tmp");
=====================================================================
Found a 4 line (46 tokens) duplication in the following files: 
Starting at line 235 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 293 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        clientProxy.createService(new Service(), new NoneSelector());
        //then
        verify(nacosRestTemplate, times(1))
                .exchangeForm(endsWith(UtilAndComs.nacosUrlService), any(), any(), any(), eq(HttpMethod.POST), any());
=====================================================================
Found a 7 line (46 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\utils\InitUtilsTest.java
Starting at line 81 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\utils\InitUtilsTest.java

            System.setProperty(PropertyKeyConst.NAMESPACE, expect1);
            Properties prop = new Properties();
            prop.put(PropertyKeyConst.NAMESPACE, "cccccc");
            String ns = InitUtils.initNamespaceForNaming(prop);
            Assert.assertEquals(expect1, ns);
        } finally {
            System.clearProperty(PropertyKeyConst.NAMESPACE);
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 100 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 154 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java

        getExecuteClientProxy(instance).deregisterService(serviceName, groupName, instance);
    }
    
    @Override
    public void updateInstance(String serviceName, String groupName, Instance instance) throws NacosException {
    
    }
    
    @Override
    public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
            boolean healthyOnly) throws NacosException {
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 101 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 67 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 166 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public void updateInstance(String serviceName, String groupName, Instance instance) throws NacosException {
    
    }
    
    @Override
    public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
            boolean healthyOnly) throws NacosException {
        return grpcClientProxy.queryInstancesOfService(serviceName, groupName, clusters, udpPort, healthyOnly);
=====================================================================
Found a 11 line (45 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\utils\TemplateUtils.java
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\utils\TemplateUtils.java

        if (StringUtils.isEmpty(source)) {
            
            try {
                return callable.call();
            } catch (Exception e) {
                LogUtils.NAMING_LOGGER.error("string empty and then execute cause an exception.", e);
            }
        }
        
        return source == null ? null : source.trim();
    }
=====================================================================
Found a 8 line (45 tokens) duplication in the following files: 
Starting at line 229 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 290 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        JsonNode actualObj = mapper.readTree(jsonString);
        
        Mockito.when(proxy.sendBeat(beatInfo, false)).thenReturn(actualObj);
        BeatReactor beatReactor = new BeatReactor(proxy);
        String serviceName = "serviceName1";
        
        beatReactor.addBeatInfo(serviceName, beatInfo);
        TimeUnit.MILLISECONDS.sleep(12);
=====================================================================
Found a 7 line (45 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java
Starting at line 49 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java

    public void testRegisterListener() {
        String group = "a";
        String name = "b";
        String clusters = "c";
        InstancesChangeNotifier instancesChangeNotifier = new InstancesChangeNotifier();
        EventListener listener = Mockito.mock(EventListener.class);
        instancesChangeNotifier.registerListener(group, name, clusters, listener);
=====================================================================
Found a 7 line (45 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 90 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenThrow(new Exception());
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        
        boolean ret = securityProxy.login("localhost");
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 264 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java

        String endpointPortTmp = TemplateUtils
                .stringEmptyAndThenExecute(System.getenv(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_ENDPOINT_PORT),
                        new Callable<String>() {
                            @Override
                            public String call() {
                                return properties.getProperty(PropertyKeyConst.ENDPOINT_PORT);
                            }
                        });
=====================================================================
Found a 10 line (44 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 67 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 166 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public void updateInstance(String serviceName, String groupName, Instance instance) throws NacosException {
    
    }
    
    @Override
    public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
            boolean healthyOnly) throws NacosException {
=====================================================================
Found a 6 line (44 tokens) duplication in the following files: 
Starting at line 230 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 261 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        final Map<String, String> params = new HashMap<String, String>(3);
        params.put(CommonParams.NAMESPACE_ID, namespaceId);
        params.put(CommonParams.SERVICE_NAME, serviceName);
        params.put(CommonParams.GROUP_NAME, groupName);
        
        String result = reqApi(UtilAndComs.nacosUrlService, params, HttpMethod.GET);
=====================================================================
Found a 3 line (44 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

        public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
                String encoding, long readTimeoutMs) throws Exception {
            return new HttpRestResult<String>(Header.newInstance(), 200, "get", "get " + path);
=====================================================================
Found a 8 line (44 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 33 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java

    @Test
    public void testType() {
        Assert.assertTrue(parser.isResponsibleFor(type));
    }
    
    @Test
    public void testAddKey() throws IOException {
        Map<String, ConfigChangeItem> map = parser.doParse("", "app.name = nacos", type);
=====================================================================
Found a 6 line (44 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 184 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 195 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 210 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 235 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 304 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 322 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 338 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

    public void testRegisterServiceByGrpc() throws NacosException, NoSuchFieldException, IllegalAccessException {
        String ns = "ns1";
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Properties props = new Properties();
        InstancesChangeNotifier notifier = new InstancesChangeNotifier();
        NamingClientProxyDelegate delegate = new NamingClientProxyDelegate(ns, holder, props, notifier);
=====================================================================
Found a 11 line (44 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 82 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java
Starting at line 132 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegateTest.java

        grpcClientProxyField.set(delegate, mockGrpcClient);
        
        String serviceName = "service1";
        String groupName = "group1";
        Instance instance = new Instance();
        instance.setServiceName(serviceName);
        instance.setClusterName(groupName);
        instance.setIp("1.1.1.1");
        instance.setPort(1);
        // use http
        instance.setEphemeral(true);
=====================================================================
Found a 8 line (43 tokens) duplication in the following files: 
Starting at line 214 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 205 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

        charBuffer = decoder.decode(buffer.asReadOnlyBuffer());
        return charBuffer.toString();
    }
    
    private static void sleep(int time) {
        try {
            Thread.sleep(time);
        } catch (InterruptedException e) {
=====================================================================
Found a 8 line (43 tokens) duplication in the following files: 
Starting at line 29 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java
Starting at line 45 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java
Starting at line 59 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java

    public void testReceiveConfigInfo() {
        final Deque<Properties> q2 = new ArrayDeque<Properties>();
        PropertiesListener a = new PropertiesListener() {
            @Override
            public void innerReceive(Properties properties) {
                q2.offer(properties);
            }
        };
=====================================================================
Found a 9 line (43 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialsTest.java
Starting at line 49 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialsTest.java

        Credentials credentials = new Credentials(ak, sk, tenantId);
        // when  then
        Assert.assertEquals(ak, credentials.getAccessKey());
        Assert.assertEquals(sk, credentials.getSecretKey());
        Assert.assertEquals(tenantId, credentials.getTenantId());
    }
    
    @Test
    public void testSetter() {
=====================================================================
Found a 10 line (43 tokens) duplication in the following files: 
Starting at line 713 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 789 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSubscribe3() throws NacosException {
        //given
        String serviceName = "service1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 162 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 186 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

    public void addTenantListeners(String dataId, String group, List<? extends Listener> listeners)
            throws NacosException {
        group = blank2defaultGroup(group);
        String tenant = agent.getTenant();
        CacheData cache = addCacheDataIfAbsent(dataId, group, tenant);
        synchronized (cache) {
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 77 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\PushReceiver.java

        this.executorService = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {
            @Override
            public Thread newThread(Runnable r) {
                Thread thread = new Thread(r);
                thread.setDaemon(true);
                thread.setName("com.alibaba.nacos.naming.failover");
=====================================================================
Found a 6 line (42 tokens) duplication in the following files: 
Starting at line 113 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java
Starting at line 129 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java

    public void instanceRegistered(String serviceName, String groupName) {
        String key = NamingUtils.getGroupedName(serviceName, groupName);
        synchronized (registeredInstances) {
            InstanceRedoData redoData = registeredInstances.get(key);
            if (null != redoData) {
                redoData.setRegistered(true);
=====================================================================
Found a 16 line (42 tokens) duplication in the following files: 
Starting at line 113 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

    public void testAddListener() throws NacosException {
        String dataId = "1";
        String group = "2";
        Listener listener = new Listener() {
            @Override
            public Executor getExecutor() {
                return null;
            }
            
            @Override
            public void receiveConfigInfo(String configInfo) {
            
            }
        };
        
        nacosConfigService.addListener(dataId, group, listener);
=====================================================================
Found a 5 line (42 tokens) duplication in the following files: 
Starting at line 35 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 116 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

    public void testConstruct() throws NacosException {
        Properties prop = new Properties();
        ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
        ServerListManager agent = Mockito.mock(ServerListManager.class);
        ClientWorker clientWorker = new ClientWorker(filter, agent, prop);
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 44 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\SpasAdapterTest.java
Starting at line 68 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\SpasAdapterTest.java

        final Map<String, String> map1 = SpasAdapter.getSignHeaders("aa", "bb", "123");
        Assert.assertEquals(2, map1.size());
        Assert.assertEquals(SpasAdapter.signWithHmacSha1Encrypt("bb+aa+" + map1.get("Timestamp"), "123"),
                map1.get("Spas-Signature"));
=====================================================================
Found a 8 line (42 tokens) duplication in the following files: 
Starting at line 792 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 814 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
                
            }
        };
        when(changeNotifier.isSubscribed(serviceName, Constants.DEFAULT_GROUP, "cluster1,cluster2")).thenReturn(false);
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java
Starting at line 47 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java
Starting at line 68 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\backups\FailoverReactorTest.java

    public void testInit() throws NacosException, NoSuchFieldException, IllegalAccessException {
        ServiceInfoHolder holder = Mockito.mock(ServiceInfoHolder.class);
        Mockito.when(holder.getServiceInfoMap()).thenReturn(new HashMap<>());
        FailoverReactor failoverReactor = new FailoverReactor(holder, "/tmp");
=====================================================================
Found a 4 line (42 tokens) duplication in the following files: 
Starting at line 154 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java
Starting at line 215 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxyTest.java

        QueryServiceResponse res = new QueryServiceResponse();
        ServiceInfo info = new ServiceInfo(GROUP_NAME + "@@" + SERVICE_NAME + "@@" + CLUSTERS);
        res.setServiceInfo(info);
        when(this.rpcClient.request(any())).thenReturn(res);
=====================================================================
Found a 9 line (41 tokens) duplication in the following files: 
Starting at line 167 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 161 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

            channel.truncate(content.length());
        } catch (FileNotFoundException e) {
            throw new IOException("file not exist");
        } finally {
            if (lock != null) {
                try {
                    lock.release();
                    lock = null;
                } catch (IOException e) {
=====================================================================
Found a 10 line (41 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

    }
    
    @Override
    public Class<? extends Event> subscribeType() {
        return ServerListChangedEvent.class;
    }
    
    @Override
    public void registerService(String serviceName, String groupName, Instance instance) throws NacosException {
        NAMING_LOGGER.info("[REGISTER-SERVICE] {} registering service {} with instance {}", namespaceId, serviceName,
=====================================================================
Found a 7 line (41 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java
Starting at line 179 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\utils\ParamUtil.java

        String tmpNamespace = null;
        
        String isUseCloudNamespaceParsing = properties.getProperty(PropertyKeyConst.IS_USE_CLOUD_NAMESPACE_PARSING,
                System.getProperty(SystemPropertyKeyConst.IS_USE_CLOUD_NAMESPACE_PARSING,
                        String.valueOf(Constants.DEFAULT_USE_CLOUD_NAMESPACE_PARSING)));
        
        if (Boolean.parseBoolean(isUseCloudNamespaceParsing)) {
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 198 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        final boolean b = nacosConfigService.publishConfig(dataId, group, content, type);
        Assert.assertTrue(b);
        
        Mockito.verify(mockWoker, Mockito.times(1))
                .publishConfig(dataId, group, namespace, null, null, null, content, null, null, type);
=====================================================================
Found a 7 line (41 tokens) duplication in the following files: 
Starting at line 124 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 140 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    public void testLifeCycle() throws NacosException {
        String name = "name";
        String encode = "UTF-8";
        String tenant = "aaa";
        String namespace = "aaa";
        final MockHttpAgent mockHttpAgent = new MockHttpAgent(name, encode, tenant, namespace);
        final MetricsHttpAgent metricsHttpAgent = new MetricsHttpAgent(mockHttpAgent);
=====================================================================
Found a 5 line (41 tokens) duplication in the following files: 
Starting at line 59 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

        List<Listener> listeners = clientWorker.getCache(dataId, group).getListeners();
        Assert.assertEquals(1, listeners.size());
        Assert.assertEquals(listener, listeners.get(0));
        
        clientWorker.removeListener(dataId, group, listener);
=====================================================================
Found a 10 line (41 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(dataId, group);
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("dataId invalid", e.getMessage());
        }
        
        try {
            dataId = "b";
            group = "";
            ParamUtils.checkKeyParam(dataId, group);
=====================================================================
Found a 4 line (41 tokens) duplication in the following files: 
Starting at line 125 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 255 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

        verify(serverProxy, times(1)).createService(argThat(new ArgumentMatcher<Service>() {
            @Override
            public boolean matches(Service service) {
                return service.getName().equals(serviceName) && service.getGroupName().equals(Constants.DEFAULT_GROUP)
=====================================================================
Found a 6 line (40 tokens) duplication in the following files: 
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 164 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

    public void registerInstance(String serviceName, String groupName, String ip, int port, String clusterName)
            throws NacosException {
        Instance instance = new Instance();
        instance.setIp(ip);
        instance.setPort(port);
        instance.setWeight(1.0);
=====================================================================
Found a 11 line (40 tokens) duplication in the following files: 
Starting at line 47 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigFilterChainManagerTest.java
Starting at line 32 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\DemoFilter1.java
Starting at line 32 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\DemoFilter2.java

        @Override
        public void init(IFilterConfig filterConfig) {
        }
    
        @Override
        public void init(Properties properties) {
        }
        
        @Override
        public void doFilter(IConfigRequest request, IConfigResponse response, IConfigFilterChain filterChain)
                throws NacosException {
=====================================================================
Found a 10 line (40 tokens) duplication in the following files: 
Starting at line 92 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(dataId, group);
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("dataId invalid", e.getMessage());
        }
        
        try {
            dataId = "b";
            group = "";
            ParamUtils.checkKeyParam(dataId, group);
=====================================================================
Found a 7 line (40 tokens) duplication in the following files: 
Starting at line 621 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 665 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        when(proxy.subscribe(anyString(), anyString(), anyString())).thenReturn(infoWithHealthyInstance);
        
        String serviceName = "service1";
        String groupName = "group1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.selectOneHealthyInstance(serviceName, groupName, clusterList);
=====================================================================
Found a 9 line (40 tokens) duplication in the following files: 
Starting at line 716 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 736 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
        //when
        client.subscribe(serviceName, clusterList, listener);
=====================================================================
Found a 5 line (40 tokens) duplication in the following files: 
Starting at line 147 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 179 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

    public void testCacheSubscriberForRedo() {
        ConcurrentMap<String, SubscriberRedoData> subscribes = getSubscriberRedoDataMap();
        assertTrue(subscribes.isEmpty());
        redoService.cacheSubscriberForRedo(SERVICE, GROUP, CLUSTER);
        assertFalse(subscribes.isEmpty());
=====================================================================
Found a 4 line (40 tokens) duplication in the following files: 
Starting at line 206 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 264 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        Service service = clientProxy.queryService(serviceName, groupName);
        //then
        verify(nacosRestTemplate, times(1))
                .exchangeForm(endsWith(UtilAndComs.nacosUrlService), any(), any(), any(), eq(HttpMethod.GET), any());
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\beat\BeatReactor.java
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\PushReceiver.java

    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        NAMING_LOGGER.info("{} do shutdown begin", className);
        ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
=====================================================================
Found a 5 line (39 tokens) duplication in the following files: 
Starting at line 142 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 179 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 198 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        final boolean b = nacosConfigService.publishConfig(dataId, group, content);
        Assert.assertTrue(b);
        
        Mockito.verify(mockWoker, Mockito.times(1))
                .publishConfig(dataId, group, namespace, null, null, null, content, null, null, type);
=====================================================================
Found a 7 line (39 tokens) duplication in the following files: 
Starting at line 140 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

            clientWorker.removeConfig(dataId, group, tenant, tag);
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("Client not connected,current status:STARTING", e.getErrMsg());
            Assert.assertEquals(-401, e.getErrCode());
            
        }
=====================================================================
Found a 3 line (39 tokens) duplication in the following files: 
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 146 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        clientProxy.deregisterService(serviceName, groupName, instance);
        //then
        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.DELETE), any());
=====================================================================
Found a 3 line (38 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 67 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 81 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java

    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
        Histogram.Timer timer = MetricsMonitor.getConfigRequestMonitor(GET, path, DEFAULT_CODE);
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 64 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 115 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    }
    
    @Override
    public HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 169 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    }
    
    @Override
    public HttpRestResult<String> httpDelete(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java
Starting at line 142 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java

    public void createService(String serviceName, String groupName, float protectThreshold) throws NacosException {
        Service service = new Service();
        service.setName(serviceName);
        service.setGroupName(groupName);
        service.setProtectThreshold(protectThreshold);
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 242 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 259 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 272 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        NAMING_LOGGER.info("[CREATE-SERVICE] {} creating service : {}", namespaceId, service);
        
        final Map<String, String> params = new HashMap<String, String>(6);
        params.put(CommonParams.NAMESPACE_ID, namespaceId);
        params.put(CommonParams.SERVICE_NAME, service.getName());
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 93 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigFilterChainManagerTest.java
Starting at line 121 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigFilterChainManagerTest.java

    public void testAddFilterOrder() throws NacosException {
        final ConfigFilterChainManager configFilterChainManager = new ConfigFilterChainManager(new Properties());
        MyIConfigFilter filter1 = new MyIConfigFilter("filter1", 1);
        MyIConfigFilter filter2 = new MyIConfigFilter("filter2", 2);
        MyIConfigFilter filter3 = new MyIConfigFilter("filter3", 3);
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java

        Map<String, ConfigChangeItem> map = parser.doParse("app.name = rocketMQ", "app.name = nacos", type);
        Assert.assertEquals("rocketMQ", map.get("app.name").getOldValue());
        Assert.assertEquals("nacos", map.get("app.name").getNewValue());
    }
=====================================================================
Found a 11 line (38 tokens) duplication in the following files: 
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(dataId, group, datumId);
            
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("dataId invalid", e.getMessage());
        }
        
        try {
            dataId = "b";
            group = "";
            ParamUtils.checkKeyParam(dataId, group, datumId);
=====================================================================
Found a 7 line (38 tokens) duplication in the following files: 
Starting at line 438 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 463 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectInstances6() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.selectInstances(serviceName, groupName, clusterList, true);
=====================================================================
Found a 4 line (38 tokens) duplication in the following files: 
Starting at line 95 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

        InstanceRedoData actual = registeredInstances.entrySet().iterator().next().getValue();
        assertEquals(SERVICE, actual.getServiceName());
        assertEquals(GROUP, actual.getGroupName());
        assertEquals(instance, actual.get());
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 42 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 59 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 90 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 141 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
=====================================================================
Found a 5 line (38 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 108 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 128 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenThrow(new Exception());
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.USERNAME, "aaa");
        properties.setProperty(PropertyKeyConst.PASSWORD, "123456");
        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
=====================================================================
Found a 3 line (37 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 62 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    @Override
    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 2 line (37 tokens) duplication in the following files: 
Starting at line 299 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 1108 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

    public boolean publishConfig(String dataId, String group, String tenant, String appName, String tag, String betaIps,
            String content, String encryptedDataKey, String casMd5, String type) throws NacosException {
=====================================================================
Found a 9 line (37 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 150 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public Class<? extends Event> subscribeType() {
        return ServerListChangedEvent.class;
    }
    
    @Override
    public void registerService(String serviceName, String groupName, Instance instance) throws NacosException {
=====================================================================
Found a 3 line (37 tokens) duplication in the following files: 
Starting at line 178 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 194 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 212 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        final Map<String, String> params = new HashMap<String, String>(8);
        params.put(CommonParams.NAMESPACE_ID, namespaceId);
        params.put(CommonParams.SERVICE_NAME, NamingUtils.getGroupedName(serviceName, groupName));
=====================================================================
Found a 4 line (37 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 99 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        response.setContent("aa");
        response.setConfigType("bb");
        Mockito.when(mockWoker.getServerConfig(dataId, group, "", timeout, false)).thenReturn(response);
        final String config = nacosConfigService.getConfig(dataId, group, timeout);
=====================================================================
Found a 8 line (37 tokens) duplication in the following files: 
Starting at line 38 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtilTest.java
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtilTest.java

        String actualContent = ConcurrentDiskUtil.getFileContent(fileName, charset);
        Assert.assertEquals(content, actualContent);
    }
    
    @Test
    public void testByteBufferToString() throws IOException {
        String msg = "test buff to string";
        ByteBuffer buff = ByteBuffer.wrap(msg.getBytes(Charset.forName("UTF-8")));
=====================================================================
Found a 5 line (37 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 100 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 129 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 158 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 189 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 221 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 248 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 277 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 307 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 336 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 366 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 397 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 430 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 459 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 499 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 532 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 565 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 602 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 635 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
        
        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 399 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java
Starting at line 416 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java

        listeners = new CopyOnWriteArrayList<ManagerListenerWrap>();
        this.isInitializing = true;
        this.content = loadCacheContentFromDiskLocal(name, dataId, group, tenant);
        this.md5 = getMd5String(content);
=====================================================================
Found a 21 line (36 tokens) duplication in the following files: 
Starting at line 142 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 166 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

        CacheData cache = addCacheDataIfAbsent(dataId, group);
        synchronized (cache) {
            
            for (Listener listener : listeners) {
                cache.addListener(listener);
            }
            cache.setSyncWithServer(false);
            agent.notifyListenConfig();
            
        }
    }
    
    /**
     * Add listeners for tenant.
     *
     * @param dataId    dataId of data
     * @param group     group of data
     * @param listeners listeners
     * @throws NacosException nacos exception
     */
    public void addTenantListeners(String dataId, String group, List<? extends Listener> listeners)
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\PushReceiver.java
Starting at line 124 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateService.java

        }
    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        NAMING_LOGGER.info("{} do shutdown begin", className);
        ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
=====================================================================
Found a 2 line (36 tokens) duplication in the following files: 
Starting at line 138 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 174 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        String type = ConfigType.getDefaultType().getType();
        Mockito.when(mockWoker.publishConfig(dataId, group, namespace, null, null, null, content, null, null, type))
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 37 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java
Starting at line 83 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\listener\impl\PropertiesListenerTest.java

        a.receiveConfigInfo("foo=bar");
        final Properties actual = q2.poll();
        Assert.assertEquals(1, actual.size());
        Assert.assertEquals("bar", actual.getProperty("foo"));
        
    }
=====================================================================
Found a 6 line (36 tokens) duplication in the following files: 
Starting at line 121 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialServiceTest.java
Starting at line 133 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialServiceTest.java

    public void testGetAkAndSk() {
        CredentialService credentialService1 = CredentialService.getInstance();
        Credentials c = new Credentials();
        c.setAccessKey("ak");
        c.setSecretKey("sk");
        credentialService1.setCredential(c);
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 347 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 372 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testGetAllInstances6() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.getAllInstances(serviceName, groupName, clusterList);
=====================================================================
Found a 8 line (36 tokens) duplication in the following files: 
Starting at line 365 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 649 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, clusterList, false);
        //then
        verify(proxy, times(1))
                .queryInstancesOfService(serviceName, Constants.DEFAULT_GROUP, "cluster1,cluster2", 0, false);
    }
    
    @Test
    public void testGetAllInstances8() throws NacosException {
=====================================================================
Found a 7 line (36 tokens) duplication in the following files: 
Starting at line 378 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 672 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, groupName, clusterList, false);
        //then
        verify(proxy, times(1)).queryInstancesOfService(serviceName, groupName, "cluster1,cluster2", 0, false);
    }
    
    @Test
    public void testSelectInstances1() throws NacosException {
=====================================================================
Found a 4 line (36 tokens) duplication in the following files: 
Starting at line 206 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 235 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 264 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 293 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        Service service = clientProxy.queryService(serviceName, groupName);
        //then
        verify(nacosRestTemplate, times(1))
                .exchangeForm(endsWith(UtilAndComs.nacosUrlService), any(), any(), any(), eq(HttpMethod.GET), any());
=====================================================================
Found a 3 line (36 tokens) duplication in the following files: 
Starting at line 501 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 534 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 567 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 604 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 637 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 667 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 686 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 700 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 721 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        SecurityProxy proxy = mock(SecurityProxy.class);
        ServerListManager mgr = mock(ServerListManager.class);
        when(mgr.getServerList()).thenReturn(Arrays.asList("localhost"));
=====================================================================
Found a 2 line (35 tokens) duplication in the following files: 
Starting at line 299 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 1108 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 338 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ConfigTransportClient.java

    public boolean publishConfig(String dataId, String group, String tenant, String appName, String tag, String betaIps,
            String content, String encryptedDataKey, String casMd5, String type) throws NacosException {
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 101 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

        if (null == config) {
            try {
                IoUtils.delete(file);
            } catch (IOException ioe) {
                LOGGER.error("[" + envName + "] delete snapshot error, " + file, ioe);
            }
        } else {
=====================================================================
Found a 7 line (35 tokens) duplication in the following files: 
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\beat\BeatReactor.java
Starting at line 125 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateService.java

    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        NAMING_LOGGER.info("{} do shutdown begin", className);
        ThreadUtils.shutdownThreadPool(executorService, NAMING_LOGGER);
=====================================================================
Found a 14 line (35 tokens) duplication in the following files: 
Starting at line 45 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\DemoFilter1.java
Starting at line 45 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\DemoFilter2.java

        request.putParameter("filter1", DEFAULT_NAME);
        filterChain.doFilter(request, response);
    }
    
    @Override
    public int getOrder() {
        return 0;
    }
    
    @Override
    public String getFilterName() {
        return DEFAULT_NAME;
    }
}
=====================================================================
Found a 3 line (35 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 146 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        clientProxy.registerService(serviceName, groupName, instance);
        //then
        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), any(), any());
=====================================================================
Found a 8 line (35 tokens) duplication in the following files: 
Starting at line 61 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java
Starting at line 86 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java

        String actual = TemplateUtils.stringEmptyAndThenExecute(word, new Callable<String>() {
            @Override
            public String call() throws Exception {
                return expect;
            }
        });
        Assert.assertEquals(expect, actual);
    }
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\common\GroupKey.java
Starting at line 114 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\common\GroupKey.java

        if (StringUtils.isBlank(dataId)) {
            throw new IllegalArgumentException("invalid dataId");
        }
        if (StringUtils.isBlank(group)) {
            throw new IllegalArgumentException("invalid group");
        }
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ContentUtils.java
Starting at line 62 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ContentUtils.java

    public static String getContentIdentity(String content) {
        int index = content.indexOf(WORD_SEPARATOR);
        if (index == -1) {
            throw new IllegalArgumentException("content does not contain separator");
        }
        return content.substring(0, index);
=====================================================================
Found a 14 line (34 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 103 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 144 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

        }
        if (StringUtils.isBlank(group) || !ParamUtils.isValid(group)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, GROUP_INVALID_MSG);
        }
    }
    
    /**
     * Check key param.
     *
     * @param dataId dataId
     * @param group  group
     * @throws NacosException nacos exception
     */
    public static void checkKeyParam(String dataId, String group) throws NacosException {
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 299 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

        List<Instance> list;
        if (serviceInfo == null || CollectionUtils.isEmpty(list = serviceInfo.getHosts())) {
            return new ArrayList<Instance>();
        }
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\beat\BeatReactor.java
Starting at line 77 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\PushReceiver.java

        this.executorService = new ScheduledThreadPoolExecutor(1, new ThreadFactory() {
            @Override
            public Thread newThread(Runnable r) {
                Thread thread = new Thread(r);
                thread.setDaemon(true);
                thread.setName("com.alibaba.nacos.naming.failover");
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\DiskCache.java

                    try {
                        String dataString = ConcurrentDiskUtil
                                .getFileContent(file, Charset.defaultCharset().toString());
                        reader = new BufferedReader(new StringReader(dataString));
                        
                        String json;
=====================================================================
Found a 3 line (34 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 193 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        String type = ConfigType.PROPERTIES.getType();
        
        Mockito.when(mockWoker.publishConfig(dataId, group, namespace, null, null, null, content, null, null, type))
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 318 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 564 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, false);
        //then
        verify(proxy, times(1)).queryInstancesOfService(serviceName, Constants.DEFAULT_GROUP, "", 0, false);
    }
    
    @Test
    public void testGetAllInstances4() throws NacosException {
=====================================================================
Found a 8 line (34 tokens) duplication in the following files: 
Starting at line 329 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 585 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, groupName, false);
        //then
        verify(proxy, times(1)).queryInstancesOfService(serviceName, groupName, "", 0, false);
        
    }
    
    @Test
    public void testGetAllInstances5() throws NacosException {
=====================================================================
Found a 6 line (34 tokens) duplication in the following files: 
Starting at line 601 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 643 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        when(proxy.subscribe(anyString(), anyString(), anyString())).thenReturn(infoWithHealthyInstance);
        
        String serviceName = "service1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.selectOneHealthyInstance(serviceName, clusterList);
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 716 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 814 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
=====================================================================
Found a 7 line (34 tokens) duplication in the following files: 
Starting at line 736 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 792 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
=====================================================================
Found a 4 line (34 tokens) duplication in the following files: 
Starting at line 228 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 258 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 287 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        ObjectMapper mapper = new ObjectMapper();
        JsonNode actualObj = mapper.readTree(jsonString);
        
        Mockito.when(proxy.sendBeat(beatInfo, false)).thenReturn(actualObj);
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    HttpRestResult<String> httpDelete(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 239 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java
Starting at line 465 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java

    }
    
    @Override
    public boolean equals(Object obj) {
        if (null == obj || obj.getClass() != getClass()) {
            return false;
        }
        if (this == obj) {
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 126 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java
Starting at line 140 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

    private static File getEncryptDataKeyFailoverFile(String envName, String dataId, String group, String tenant) {
        File tmp = new File(LOCAL_SNAPSHOT_PATH, envName + SUFFIX);
        tmp = new File(tmp, FAILOVER_CHILD_1);
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 176 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 170 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

                    LOGGER.warn("close wrong", e);
                }
            }
            if (channel != null) {
                try {
                    channel.close();
                    channel = null;
                } catch (IOException e) {
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 184 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 178 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

                    LOGGER.warn("close wrong", e);
                }
            }
            if (raf != null) {
                try {
                    raf.close();
                    raf = null;
                } catch (IOException e) {
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 363 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 109 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 208 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public void unsubscribe(String serviceName, String groupName, String clusters) throws NacosException {
    }
    
    @Override
    public void updateBeatInfo(Set<Instance> modifiedInstances) {
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\CacheDataTest.java
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\CacheDataTest.java

    public void testConstructorAndEquals() {
        ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
        final CacheData cacheData1 = new CacheData(filter, "name1", "key", "group", "tenant");
        Assert.assertEquals("CacheData [key, group]", cacheData1.toString());
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 92 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java
Starting at line 102 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\ClientWorkerTest.java

        clientWorker.removeListener(dataId, group, listener);
        listeners = clientWorker.getCache(dataId, group).getListeners();
        Assert.assertEquals(0, listeners.size());
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 40 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 41 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java
Starting at line 55 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java

        Assert.assertNull(map.get("app.name").getOldValue());
        Assert.assertEquals("nacos", map.get("app.name").getNewValue());
    }
    
    @Test
    public void testRemoveKey() throws IOException {
=====================================================================
Found a 9 line (33 tokens) duplication in the following files: 
Starting at line 101 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(dataId, group);
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("group invalid", e.getMessage());
        }
    }
    
    @Test
    public void testCheckKeyParam2() throws NacosException {
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 129 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 147 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java
Starting at line 166 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingMaintainServiceTest.java

                        && Math.abs(service.getProtectThreshold() - Constants.DEFAULT_PROTECT_THRESHOLD) < 0.1f
                        && service.getMetadata().size() == 0;
            }
        }), argThat(o -> o instanceof NoneSelector));
    }
    
    @Test
    public void testCreateService2() throws NacosException {
=====================================================================
Found a 10 line (33 tokens) duplication in the following files: 
Starting at line 695 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 769 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSubscribe2() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
=====================================================================
Found a 8 line (33 tokens) duplication in the following files: 
Starting at line 858 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 877 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        AbstractSelector selector = new AbstractSelector("aaa") {
            @Override
            public String getType() {
                return super.getType();
            }
        };
        //when
        client.getServicesOfServer(pageNo, pageSize, selector);
=====================================================================
Found a 6 line (33 tokens) duplication in the following files: 
Starting at line 33 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java
Starting at line 49 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java
Starting at line 66 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifierTest.java

    public void testRegisterListener() {
        String group = "a";
        String name = "b";
        String clusters = "c";
        InstancesChangeNotifier instancesChangeNotifier = new InstancesChangeNotifier();
        EventListener listener = Mockito.mock(EventListener.class);
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\RedoScheduledTaskTest.java
Starting at line 90 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\RedoScheduledTaskTest.java

        Set<InstanceRedoData> mockData = generateMockInstanceData(false, false);
        when(redoService.findInstanceRedoData()).thenReturn(mockData);
        redoTask.run();
        verify(clientProxy).doRegisterService(SERVICE, GROUP, INSTANCE);
=====================================================================
Found a 4 line (33 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\RedoScheduledTaskTest.java
Starting at line 132 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\RedoScheduledTaskTest.java

        Set<SubscriberRedoData> mockData = generateMockSubscriberData(false, false);
        when(redoService.findSubscriberRedoData()).thenReturn(mockData);
        redoTask.run();
        verify(clientProxy).doSubscribe(SERVICE, GROUP, CLUSTER);
=====================================================================
Found a 2 line (33 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 99 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 128 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 188 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 220 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 247 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 276 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 306 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 335 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 365 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 396 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 429 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 491 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 524 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 557 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 594 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 627 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        a.setCode(200);
        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
=====================================================================
Found a 3 line (33 tokens) duplication in the following files: 
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 146 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        clientProxy.deregisterService(serviceName, groupName, instance);
        //then
        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.DELETE), any());
=====================================================================
Found a 15 line (32 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java

    HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
    
    /**
     * invoke http post method.
     *
     * @param path          http path
     * @param headers       http headers
     * @param paramValues   http paramValues http
     * @param encoding      http encode
     * @param readTimeoutMs http timeout
     * @return HttpResult http response
     * @throws Exception If an input or output exception occurred
     */
    HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 70 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 125 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 179 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

                .setConTimeOutMillis(ConfigHttpClientManager.getInstance().getConnectTimeoutOrDefault(100)).build();
        do {
            try {
                Header newHeaders = Header.newInstance();
                if (headers != null) {
                    newHeaders.addAll(headers);
                }
=====================================================================
Found a 10 line (32 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 215 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

                            "[NACOS HTTP-GET] The maximum number of tolerable server reconnection errors has been reached");
                }
                serverListMgr.refreshCurrentServerAddr();
            }
            
        } while (System.currentTimeMillis() <= endTime);
        
        LOGGER.error("no available server");
        throw new ConnectException("no available server");
    }
=====================================================================
Found a 4 line (32 tokens) duplication in the following files: 
Starting at line 227 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 288 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 358 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

            serviceInfo = serviceInfoHolder.getServiceInfo(serviceName, groupName, clusterString);
            if (null == serviceInfo) {
                serviceInfo = clientProxy.subscribe(serviceName, groupName, clusterString);
            }
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 134 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 182 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServerListManager.java

        return startDT.getTime();
    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        NAMING_LOGGER.info("{} do shutdown begin", className);
=====================================================================
Found a 3 line (32 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifier.java
Starting at line 77 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifier.java
Starting at line 97 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\event\InstancesChangeNotifier.java

    public void registerListener(String groupName, String serviceName, String clusters, EventListener listener) {
        String key = ServiceInfo.getKey(NamingUtils.getGroupedName(serviceName, groupName), clusters);
        ConcurrentHashSet<EventListener> eventListeners = listenerMap.get(key);
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 130 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        redoService.instanceRegistered(serviceName, groupName);
    }
    
    @Override
    public void deregisterService(String serviceName, String groupName, Instance instance) throws NacosException {
        NAMING_LOGGER
                .info("[DEREGISTER-SERVICE] {} deregistering service {} with instance: {}", namespaceId, serviceName,
                        instance);
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialServiceTest.java
Starting at line 55 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialServiceTest.java

    public void testFreeInstance() {
        CredentialService credentialService1 = CredentialService.getInstance();
        CredentialService credentialService2 = CredentialService.freeInstance();
        Assert.assertEquals(credentialService1, credentialService2);
    }
    
    @Test
    public void testFreeInstance2() {
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 318 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 409 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 564 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, false);
        //then
        verify(proxy, times(1)).queryInstancesOfService(serviceName, Constants.DEFAULT_GROUP, "", 0, false);
    }
    
    @Test
    public void testGetAllInstances4() throws NacosException {
=====================================================================
Found a 8 line (32 tokens) duplication in the following files: 
Starting at line 365 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 456 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 649 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, clusterList, false);
        //then
        verify(proxy, times(1))
                .queryInstancesOfService(serviceName, Constants.DEFAULT_GROUP, "cluster1,cluster2", 0, false);
    }
    
    @Test
    public void testGetAllInstances8() throws NacosException {
=====================================================================
Found a 6 line (32 tokens) duplication in the following files: 
Starting at line 427 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 451 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSelectInstances5() throws NacosException {
        //given
        String serviceName = "service1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.selectInstances(serviceName, clusterList, true);
=====================================================================
Found a 7 line (32 tokens) duplication in the following files: 
Starting at line 754 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 793 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
                
            }
        };
        when(changeNotifier.isSubscribed(serviceName, Constants.DEFAULT_GROUP, "")).thenReturn(false);
=====================================================================
Found a 5 line (32 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 204 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        BeatReactor beatReactor = new BeatReactor(proxy, properties);
        Field field = BeatReactor.class.getDeclaredField("executorService");
        field.setAccessible(true);
        ScheduledThreadPoolExecutor scheduledExecutorService = (ScheduledThreadPoolExecutor) field.get(beatReactor);
        Assert.assertEquals(Integer.valueOf(threadSize).intValue(), scheduledExecutorService.getCorePoolSize());
=====================================================================
Found a 2 line (32 tokens) duplication in the following files: 
Starting at line 41 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 89 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        result.setCode(200);
        when(nacosRestTemplate.postForm(any(), (Header) any(), any(), any(), any())).thenReturn(result);
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 114 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 59 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

        throw new ConnectException("no available server");
    }
    
    @Override
    public HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 168 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

        throw new ConnectException("no available server, currentServerAddr : " + currentServerAddr);
    }
    
    @Override
    public HttpRestResult<String> httpDelete(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 275 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 554 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 336 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java

    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        LOGGER.info("{} do shutdown begin", className);
=====================================================================
Found a 16 line (31 tokens) duplication in the following files: 
Starting at line 339 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 384 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

        LOGGER.info("[{}] [subscribe] {}", this.agent.getName(), key);
        
        MetricsMonitor.getListenConfigCountMonitor().set(cacheMap.get().size());
        
        return cache;
    }
    
    /**
     * Add cache data if absent.
     *
     * @param dataId data id if data
     * @param group  group of data
     * @param tenant tenant of data
     * @return cache data
     */
    public CacheData addCacheDataIfAbsent(String dataId, String group, String tenant) throws NacosException {
=====================================================================
Found a 6 line (31 tokens) duplication in the following files: 
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 157 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\beat\BeatReactor.java
Starting at line 251 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ServiceInfoHolder.java
Starting at line 135 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\PushReceiver.java
Starting at line 183 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServerListManager.java
Starting at line 125 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateService.java
Starting at line 171 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 514 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

    }
    
    @Override
    public void shutdown() throws NacosException {
        String className = this.getClass().getName();
        NAMING_LOGGER.info("{} do shutdown begin", className);
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateService.java
Starting at line 114 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\core\ServiceInfoUpdateService.java

    public void scheduleUpdateIfAbsent(String serviceName, String groupName, String clusters) {
        String serviceKey = ServiceInfo.getKey(NamingUtils.getGroupedName(serviceName, groupName), clusters);
        if (futureMap.get(serviceKey) != null) {
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 68 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\RedoScheduledTask.java
Starting at line 105 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\RedoScheduledTask.java

    private void redoForInstance(InstanceRedoData redoData) throws NacosException {
        RedoData.RedoType redoType = redoData.getRedoType();
        String serviceName = redoData.getServiceName();
        String groupName = redoData.getGroupName();
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 194 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 230 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 261 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        final Map<String, String> params = new HashMap<String, String>(8);
        params.put(CommonParams.NAMESPACE_ID, namespaceId);
        params.put(CommonParams.SERVICE_NAME, serviceName);
        params.put(CommonParams.GROUP_NAME, groupName);
=====================================================================
Found a 11 line (31 tokens) duplication in the following files: 
Starting at line 86 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 116 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 223 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\CacheDataTest.java

        final Listener listener = new Listener() {
            @Override
            public Executor getExecutor() {
                return null;
            }
            
            @Override
            public void receiveConfigInfo(String configInfo) {
            
            }
        };
=====================================================================
Found a 10 line (31 tokens) duplication in the following files: 
Starting at line 102 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigFilterChainManagerTest.java
Starting at line 129 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigFilterChainManagerTest.java

        configFilterChainManager.addFilter(filter3);
        
        ConfigRequest configRequest = new ConfigRequest();
        
        configFilterChainManager.doFilter(configRequest, new ConfigResponse());
        
        IConfigContext configContext = configRequest.getConfigContext();
        
        // doFilter works
        Assert.assertEquals(1, configContext.getParameter("filter1"));
=====================================================================
Found a 2 line (31 tokens) duplication in the following files: 
Starting at line 149 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 156 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

                .httpGet("/aa", new HashMap<String, String>(), new HashMap<String, String>(), "UTF-8", 1L);
        Assert.assertEquals("get /aa", result1.getMessage());
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 34 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\CacheDataTest.java
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\CacheDataTest.java
Starting at line 84 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\CacheDataTest.java

    public void testConstructorAndEquals() {
        ConfigFilterChainManager filter = new ConfigFilterChainManager(new Properties());
        final CacheData cacheData1 = new CacheData(filter, "name1", "key", "group", "tenant");
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java
Starting at line 67 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 96 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 125 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        NacosRestTemplate mock = Mockito.mock(NacosRestTemplate.class);
        
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("127.0.0.1:8848");
        a.setCode(200);
=====================================================================
Found a 3 line (31 tokens) duplication in the following files: 
Starting at line 164 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 173 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

        redoService.subscriberRegistered(SERVICE, GROUP, CLUSTER);
        SubscriberRedoData actual = subscribes.entrySet().iterator().next().getValue();
        assertTrue(actual.isRegistered());
=====================================================================
Found a 5 line (31 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 94 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 183 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 215 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 242 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 271 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 301 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 330 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 360 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 391 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 423 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

    public void testRegisterService() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> a = new HttpRestResult<Object>();
        a.setData("127.0.0.1:8848");
=====================================================================
Found a 4 line (31 tokens) duplication in the following files: 
Starting at line 27 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\utils\GenericPollerTest.java
Starting at line 37 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\utils\GenericPollerTest.java

    public void testNext() {
        String item1 = "item1";
        String item2 = "item2";
        GenericPoller<String> poller = new GenericPoller<>(Arrays.asList(item1, item2));
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 50 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    }
    
    @Override
    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 10 line (30 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java

            result = httpAgent.httpGet(path, headers, paramValues, encode, readTimeoutMs);
        } finally {
            timer.observeDuration();
        }
        
        return result;
    }
    
    @Override
    public HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 64 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 60 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    }
    
    @Override
    public HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 66 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    }
    
    @Override
    public HttpRestResult<String> httpDelete(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 82 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 136 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 191 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

                            serverListMgr.getCurrentServerAddr(), result.getCode());
                } else {
                    // Update the currently available server addr
                    serverListMgr.updateCurrentServerAddr(currentServerAddr);
                    return result;
                }
            } catch (ConnectException connectException) {
                LOGGER.error("[NACOS ConnectException httpGet] currentServerAddr:{}, err : {}",
=====================================================================
Found a 18 line (30 tokens) duplication in the following files: 
Starting at line 145 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 168 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 193 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

            for (Listener listener : listeners) {
                cache.addListener(listener);
            }
            cache.setSyncWithServer(false);
            agent.notifyListenConfig();
            
        }
    }
    
    /**
     * Add listeners for tenant.
     *
     * @param dataId    dataId of data
     * @param group     group of data
     * @param listeners listeners
     * @throws NacosException nacos exception
     */
    public void addTenantListeners(String dataId, String group, List<? extends Listener> listeners)
=====================================================================
Found a 3 line (30 tokens) duplication in the following files: 
Starting at line 790 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 801 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

                            List<CacheData> cacheDatas = listenCachesMap.get(String.valueOf(cache.getTaskId()));
                            if (cacheDatas == null) {
                                cacheDatas = new LinkedList<CacheData>();
=====================================================================
Found a 18 line (30 tokens) duplication in the following files: 
Starting at line 192 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ConcurrentDiskUtil.java
Starting at line 186 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\ConcurrentDiskUtil.java

                    LOGGER.warn("close wrong", e);
                }
            }
            
        }
        return true;
    }
    
    /**
     * transfer ByteBuffer to String.
     *
     * @param buffer      buffer
     * @param charsetName charsetName
     * @return String
     * @throws IOException IOException
     */
    public static String byteBufferToString(ByteBuffer buffer, String charsetName) throws IOException {
        Charset charset = null;
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 100 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 140 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

    public static void checkKeyParam(String dataId, String group) throws NacosException {
        if (StringUtils.isBlank(dataId) || !ParamUtils.isValid(dataId)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, DATAID_INVALID_MSG);
        }
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 120 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 144 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

        }
        if (StringUtils.isBlank(group) || !ParamUtils.isValid(group)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, GROUP_INVALID_MSG);
        }
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java
Starting at line 74 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

    public NacosNamingMaintainService(String serverList) throws NacosException {
        Properties properties = new Properties();
        properties.setProperty(PropertyKeyConst.SERVER_ADDR, serverList);
        init(properties);
    }
    
    public NacosNamingMaintainService(Properties properties) throws NacosException {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 245 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 152 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\DiskCache.java

                    if (!CollectionUtils.isEmpty(dom.getHosts())) {
                        domMap.put(dom.getKey(), dom);
                    }
                }
            } catch (Exception e) {
=====================================================================
Found a 4 line (30 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java
Starting at line 188 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\utils\ParamUtil.java

            tmpNamespace = TemplateUtils.stringEmptyAndThenExecute(tmpNamespace, new Callable<String>() {
                @Override
                public String call() {
                    String namespace = System.getenv(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_NAMESPACE);
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 168 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 187 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

    public void testPublishConfigCas() throws NacosException {
        String dataId = "1";
        String group = "2";
        String content = "123";
        String namespace = "";
        String casMd5 = "96147704e3cb8be8597d55d75d244a02";
        String type = ConfigType.getDefaultType().getType();
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 329 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 420 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 585 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, groupName, false);
        //then
        verify(proxy, times(1)).queryInstancesOfService(serviceName, groupName, "", 0, false);
        
    }
    
    @Test
    public void testGetAllInstances5() throws NacosException {
=====================================================================
Found a 6 line (30 tokens) duplication in the following files: 
Starting at line 336 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 360 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testGetAllInstances5() throws NacosException {
        //given
        String serviceName = "service1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.getAllInstances(serviceName, clusterList);
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 341 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 606 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, clusterList);
        //then
        verify(proxy, times(1)).subscribe(serviceName, Constants.DEFAULT_GROUP, "cluster1,cluster2");
    }
    
    @Test
    public void testGetAllInstances6() throws NacosException {
=====================================================================
Found a 8 line (30 tokens) duplication in the following files: 
Starting at line 353 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 627 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, groupName, clusterList);
        //then
        verify(proxy, times(1)).subscribe(serviceName, groupName, "cluster1,cluster2");
        
    }
    
    @Test
    public void testGetAllInstances7() throws NacosException {
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 378 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 469 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 672 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, groupName, clusterList, false);
        //then
        verify(proxy, times(1)).queryInstancesOfService(serviceName, groupName, "cluster1,cluster2", 0, false);
    }
    
    @Test
    public void testSelectInstances1() throws NacosException {
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 773 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 815 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
                
            }
        };
        when(changeNotifier.isSubscribed(serviceName, groupName, "")).thenReturn(false);
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 136 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 196 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 255 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 284 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 343 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 373 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 404 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 437 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 505 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 538 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 571 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 608 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 641 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
        
        String serviceName = "service1";
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 119 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 267 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.DELETE), any());
    }
    
    @Test
    public void testUpdateInstance() throws Exception {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 296 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 326 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.PUT), any());
    }
    
    @Test
    public void testQueryInstancesOfService() throws Exception {
=====================================================================
Found a 5 line (30 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 84 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 102 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

    public void testLoginSuccess() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> result = new HttpRestResult<>();
        result.setData("{\"accessToken\":\"ttttttttttttttttt\",\"tokenTtl\":1000}");
=====================================================================
Found a 7 line (30 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java

        String actual = TemplateUtils.stringEmptyAndThenExecute(word, new Callable<String>() {
            @Override
            public String call() throws Exception {
                return "call";
            }
        });
        Assert.assertEquals("", actual);
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 53 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 172 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 67 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 81 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    public HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 62 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java
Starting at line 56 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    @Override
    public HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encode, long readTimeoutMs) throws Exception {
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 221 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 226 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java

                this.name = FIXED_NAME + "-" + getFixedNameSuffix(
                        this.serverUrls.toArray(new String[this.serverUrls.size()]));
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 280 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 145 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java

        String isUseEndpointRuleParsing = properties.getProperty(PropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                System.getProperty(SystemPropertyKeyConst.IS_USE_ENDPOINT_PARSING_RULE,
                        String.valueOf(ParamUtil.USE_ENDPOINT_PARSING_RULE_DEFAULT_VALUE)));
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 85 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 141 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

        if (StringUtils.isBlank(dataId) || !ParamUtils.isValid(dataId)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, DATAID_INVALID_MSG);
        }
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 103 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java
Starting at line 113 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java
Starting at line 142 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java
Starting at line 153 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java

    public void createService(String serviceName, String groupName, float protectThreshold) throws NacosException {
        Service service = new Service();
        service.setName(serviceName);
        service.setGroupName(groupName);
        service.setProtectThreshold(protectThreshold);
=====================================================================
Found a 17 line (29 tokens) duplication in the following files: 
Starting at line 159 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java
Starting at line 238 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java

            for (InstanceRedoData each : registeredInstances.values()) {
                if (each.isNeedRedo()) {
                    result.add(each);
                }
            }
        }
        return result;
    }
    
    /**
     * Cache subscriber for redo.
     *
     * @param serviceName service name
     * @param groupName   group name
     * @param cluster     cluster
     */
    public void cacheSubscriberForRedo(String serviceName, String groupName, String cluster) {
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java
Starting at line 190 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java
Starting at line 207 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoService.java

    public void cacheSubscriberForRedo(String serviceName, String groupName, String cluster) {
        String key = ServiceInfo.getKey(NamingUtils.getGroupedName(serviceName, groupName), cluster);
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java
Starting at line 75 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java

            tmpNamespace = TemplateUtils.stringEmptyAndThenExecute(tmpNamespace, new Callable<String>() {
                @Override
                public String call() {
                    String namespace = System.getenv(PropertyKeyConst.SystemEnv.ALIBABA_ALIWARE_NAMESPACE);
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 74 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 104 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        Assert.assertEquals("aa", config);
        Mockito.verify(mockWoker, Mockito.times(1)).getServerConfig(dataId, group, tenant, timeout, false);
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 40 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 54 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParserTest.java
Starting at line 41 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\impl\YmlChangeParserTest.java

        Assert.assertNull(map.get("app.name").getOldValue());
        Assert.assertEquals("nacos", map.get("app.name").getNewValue());
    }
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(Arrays.asList(dataId), group);
            
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("dataId invalid", e.getMessage());
=====================================================================
Found a 7 line (29 tokens) duplication in the following files: 
Starting at line 347 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 372 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 438 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 463 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testGetAllInstances6() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.getAllInstances(serviceName, groupName, clusterList);
=====================================================================
Found a 9 line (29 tokens) duplication in the following files: 
Starting at line 678 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 751 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testSubscribe1() throws NacosException {
        //given
        String serviceName = "service1";
        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 237 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 265 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        Mockito.verify(proxy, Mockito.times(1)).sendBeat(beatInfo, false);
        TimeUnit.MILLISECONDS.sleep(12);
        Mockito.verify(proxy, Mockito.times(1)).sendBeat(beatInfo, false);
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java
Starting at line 80 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java

    public void testIsDomain() throws IOException {
        Properties properties = new Properties();
        properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1:8848");
        final ServerListManager serverListManager = new ServerListManager(properties);
        Assert.assertTrue(serverListManager.isDomain());
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 80 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java
Starting at line 89 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java

    public void testGetCurrentServer() {
        Properties properties = new Properties();
        properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1:8848");
        final ServerListManager serverListManager = new ServerListManager(properties);
=====================================================================
Found a 4 line (29 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 113 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

    public void testInstanceRegistered() {
        ConcurrentMap<String, InstanceRedoData> registeredInstances = getInstanceRedoDataMap();
        redoService.cacheInstanceForRedo(SERVICE, GROUP, new Instance());
        redoService.instanceRegistered(SERVICE, GROUP);
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 107 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 116 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

        redoService.instanceRegistered(SERVICE, GROUP);
        InstanceRedoData actual = registeredInstances.entrySet().iterator().next().getValue();
        assertTrue(actual.isRegistered());
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 108 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 165 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

        InstanceRedoData actual = registeredInstances.entrySet().iterator().next().getValue();
        assertTrue(actual.isRegistered());
    }
    
    @Test
    public void testInstanceDeregister() {
=====================================================================
Found a 6 line (29 tokens) duplication in the following files: 
Starting at line 117 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 174 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

        InstanceRedoData actual = registeredInstances.entrySet().iterator().next().getValue();
        assertTrue(actual.isUnregistering());
    }
    
    @Test
    public void testRemoveInstanceForRedo() {
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 88 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        clientProxy.registerService(serviceName, groupName, instance);
        //then
        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), any(), any());
=====================================================================
Found a 2 line (29 tokens) duplication in the following files: 
Starting at line 177 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 209 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 384 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 417 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.GET), any());
        Assert.assertEquals(groupName + "@@" + serviceName, serviceInfo.getName());
=====================================================================
Found a 5 line (29 tokens) duplication in the following files: 
Starting at line 228 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 314 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 505 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 538 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 571 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 608 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 641 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field nacosRestTemplateField = NamingHttpClientProxy.class.getDeclaredField("nacosRestTemplate");
        nacosRestTemplateField.setAccessible(true);
        nacosRestTemplateField.set(clientProxy, nacosRestTemplate);
=====================================================================
Found a 3 line (29 tokens) duplication in the following files: 
Starting at line 32 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java
Starting at line 40 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java

        Runnable task = Mockito.mock(Runnable.class);
        TemplateUtils.stringNotEmptyAndThenExecute(word, task);
        Mockito.verify(task, Mockito.times(1)).run();
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java
Starting at line 69 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\http\MetricsHttpAgentTest.java

    HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 787 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 798 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

                    if (!CollectionUtils.isEmpty(cache.getListeners())) {
                        //get listen  config
                        if (!cache.isUseLocalConfigInfo()) {
                            List<CacheData> cacheDatas = listenCachesMap.get(String.valueOf(cache.getTaskId()));
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 78 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ConfigHttpClientManager.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientManager.java

        NAMING_LOGGER.warn("[ConfigHttpClientManager] Start destroying NacosRestTemplate");
        try {
            HttpClientBeanHolder.shutdownNacostSyncRest(HTTP_CLIENT_FACTORY.getClass().getName());
        } catch (Exception ex) {
            NAMING_LOGGER.error("[ConfigHttpClientManager] An exception occurred when the HTTP client was closed : {}",
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 110 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ConfigHttpClientManager.java
Starting at line 82 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientManager.java

    private static class ConfigHttpClientFactory extends AbstractHttpClientFactory {
        
        @Override
        protected HttpClientConfig buildHttpClientConfig() {
            return HttpClientConfig.builder().setConTimeOutMillis(CON_TIME_OUT_MILLIS)
                    .setReadTimeOutMillis(READ_TIME_OUT_MILLIS).build();
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\PropertiesChangeParser.java
Starting at line 44 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\YmlChangeParser.java

    public PropertiesChangeParser() {
        super(CONFIG_TYPE);
    }
    
    @Override
    public Map<String, ConfigChangeItem> doParse(String oldContent, String newContent, String type) throws IOException {
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingMaintainService.java
Starting at line 80 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

    public NacosNamingMaintainService(Properties properties) throws NacosException {
        init(properties);
    }
    
    private void init(Properties properties) throws NacosException {
        ValidatorUtils.checkInitParam(properties);
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 415 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 430 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

                    return callServer(api, params, body, nacosDomain, method);
                } catch (NacosException e) {
                    exception = e;
                    if (NAMING_LOGGER.isDebugEnabled()) {
                        NAMING_LOGGER.debug("request {} failed.", nacosDomain, e);
=====================================================================
Found a 2 line (28 tokens) duplication in the following files: 
Starting at line 138 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 193 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        String type = ConfigType.getDefaultType().getType();
        Mockito.when(mockWoker.publishConfig(dataId, group, namespace, null, null, null, content, null, null, type))
=====================================================================
Found a 3 line (28 tokens) duplication in the following files: 
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 174 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

        String type = ConfigType.PROPERTIES.getType();
        
        Mockito.when(mockWoker.publishConfig(dataId, group, namespace, null, null, null, content, null, null, type))
=====================================================================
Found a 6 line (28 tokens) duplication in the following files: 
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 138 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            group = "";
            ParamUtils.checkKeyParam(dataId, group, datumId);
            
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("group invalid", e.getMessage());
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 192 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 212 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

    public void testCheckParamFail() throws NacosException {
        exceptionRule.expect(NacosException.class);
        exceptionRule.expectMessage("content invalid");
        
        String dataId = "b";
        String group = "c";
        String content = "";
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 297 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 524 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName);
        //then
        verify(proxy, times(1)).subscribe(serviceName, Constants.DEFAULT_GROUP, "");
    }
    
    @Test
    public void testGetAllInstances2() throws NacosException {
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 308 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 544 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, groupName);
        //then
        verify(proxy, times(1)).subscribe(serviceName, groupName, "");
    }
    
    @Test
    public void testGetAllInstances3() throws NacosException {
=====================================================================
Found a 8 line (28 tokens) duplication in the following files: 
Starting at line 699 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 737 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
        //when
        client.subscribe(serviceName, groupName, listener);
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 754 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 773 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 793 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 815 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
                
            }
        };
        when(changeNotifier.isSubscribed(serviceName, Constants.DEFAULT_GROUP, "")).thenReturn(false);
=====================================================================
Found a 7 line (28 tokens) duplication in the following files: 
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 155 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

        assertEquals(instance, actual.get());
        assertFalse(actual.isRegistered());
        assertFalse(actual.isUnregistering());
    }
    
    @Test
    public void testInstanceRegistered() {
=====================================================================
Found a 5 line (28 tokens) duplication in the following files: 
Starting at line 36 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 55 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 84 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 102 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 123 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

    public void testLoginSuccess() throws Exception {
        //given
        NacosRestTemplate nacosRestTemplate = mock(NacosRestTemplate.class);
        HttpRestResult<Object> result = new HttpRestResult<>();
        result.setData("{\"accessToken\":\"ttttttttttttttttt\",\"tokenTtl\":1000}");
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 48 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java
Starting at line 61 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java

        String actual = TemplateUtils.stringEmptyAndThenExecute(word, new Callable<String>() {
            @Override
            public String call() throws Exception {
                return "call";
=====================================================================
Found a 4 line (28 tokens) duplication in the following files: 
Starting at line 73 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java
Starting at line 86 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\utils\TemplateUtilsTest.java

        String actual = TemplateUtils.stringBlankAndThenExecute(word, new Callable<String>() {
            @Override
            public String call() throws Exception {
                return "call";
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 253 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 265 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

        LOGGER.info("[{}] [unsubscribe] {}", this.agent.getName(), groupKey);
        
        MetricsMonitor.getListenConfigCountMonitor().set(cacheMap.get().size());
    }
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 330 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 371 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

                int taskId = cacheMap.get().size() / (int) ParamUtil.getPerTaskConfigSize();
                cache.setTaskId(taskId);
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 334 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 380 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

            Map<String, CacheData> copy = new HashMap<String, CacheData>(cacheMap.get());
            copy.put(key, cache);
            cacheMap.set(copy);
        }
        
        LOGGER.info("[{}] [subscribe] {}", this.agent.getName(), key);
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 87 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 74 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

    public static String getSnapshot(String name, String dataId, String group, String tenant) {
        if (!SnapShotSwitch.getIsSnapShot()) {
            return null;
        }
        File file = getSnapshotFile(name, dataId, group, tenant);
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 212 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 147 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

            tmp = new File(tmp, SNAPSHOT_FILE_CHILD_2);
            tmp = new File(tmp, tenant);
        }
        
        return new File(new File(tmp, group), dataId);
    }
}
=====================================================================
Found a 7 line (27 tokens) duplication in the following files: 
Starting at line 193 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\backups\FailoverReactor.java
Starting at line 92 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\cache\DiskCache.java

        public void run() {
            Map<String, ServiceInfo> domMap = new HashMap<String, ServiceInfo>(16);
            
            BufferedReader reader = null;
            try {
                
                File cacheDir = new File(failoverDir);
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 126 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 150 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java

    public void doRegisterService(String serviceName, String groupName, Instance instance) throws NacosException {
        InstanceRequest request = new InstanceRequest(namespaceId, serviceName, groupName,
                NamingRemoteConstants.REGISTER_INSTANCE, instance);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 381 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 386 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java

        return reqApi(api, params, Collections.EMPTY_MAP, method);
    }
    
    public String reqApi(String api, Map<String, String> params, Map<String, String> body, String method)
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 27 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialsTest.java
Starting at line 57 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\identify\CredentialsTest.java

    public void testGetter() {
        // given
        String ak = "ak";
        String sk = "sk";
        String tenantId = "100";
        Credentials credentials = new Credentials(ak, sk, tenantId);
=====================================================================
Found a 9 line (27 tokens) duplication in the following files: 
Starting at line 141 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 248 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testRegisterInstance4() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        String clusterName = "cluster1";
        String ip = "1.1.1.1";
        int port = 10000;
        //when
        client.registerInstance(serviceName, groupName, ip, port, clusterName);
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 347 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 372 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 438 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 463 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 732 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 810 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testGetAllInstances6() throws NacosException {
        //given
        String serviceName = "service1";
        String groupName = "group1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
=====================================================================
Found a 6 line (27 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 96 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 231 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 261 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 292 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        NamingHttpClientProxy proxy = Mockito.mock(NamingHttpClientProxy.class);
        BeatReactor beatReactor = new BeatReactor(proxy);
        String serviceName = "serviceName1";
        
        beatReactor.addBeatInfo(serviceName, beatInfo);
        TimeUnit.MILLISECONDS.sleep(15);
=====================================================================
Found a 3 line (27 tokens) duplication in the following files: 
Starting at line 104 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 236 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java
Starting at line 266 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\beat\BeatReactorTest.java

        Assert.assertTrue(beatInfo.isStopped());
        Mockito.verify(proxy, Mockito.times(1)).sendBeat(beatInfo, false);
        TimeUnit.MILLISECONDS.sleep(10);
=====================================================================
Found a 4 line (27 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java
Starting at line 89 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\core\ServerListManagerTest.java

    public void testIsDomain() throws IOException {
        Properties properties = new Properties();
        properties.put(PropertyKeyConst.SERVER_ADDR, "127.0.0.1:8848");
        final ServerListManager serverListManager = new ServerListManager(properties);
=====================================================================
Found a 1 line (27 tokens) duplication in the following files: 
Starting at line 71 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 90 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 100 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 129 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 158 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 189 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 221 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 248 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 277 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 307 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 336 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 366 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 397 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 430 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 493 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 526 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 559 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 596 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 629 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        when(nacosRestTemplate.exchangeForm(any(), any(), any(), any(), any(), any())).thenReturn(a);
=====================================================================
Found a 2 line (27 tokens) duplication in the following files: 
Starting at line 177 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 209 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 355 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 384 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 417 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        verify(nacosRestTemplate, times(1)).exchangeForm(any(), any(), any(), any(), eq(HttpMethod.GET), any());
        Assert.assertEquals(groupName + "@@" + serviceName, serviceInfo.getName());
=====================================================================
Found a 5 line (27 tokens) duplication in the following files: 
Starting at line 466 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 708 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java
Starting at line 729 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxyTest.java

        NamingHttpClientProxy clientProxy = new NamingHttpClientProxy("namespaceId", proxy, mgr, props, holder);
        
        final Field mockBeatReactorField = NamingHttpClientProxy.class.getDeclaredField("beatReactor");
        mockBeatReactorField.setAccessible(true);
        mockBeatReactorField.set(clientProxy, mockBeatReactor);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 116 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\NacosConfigService.java
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\NacosConfigService.java

    public boolean publishConfig(String dataId, String group, String content, String type) throws NacosException {
        return publishConfigInner(namespace, dataId, group, null, null, null, content, type, null);
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 51 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 53 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 63 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    HttpRestResult<String> httpGet(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 65 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 67 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 79 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\HttpAgent.java
Starting at line 81 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 172 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\ServerHttpAgent.java

    HttpRestResult<String> httpDelete(String path, Map<String, String> headers, Map<String, String> paramValues,
            String encoding, long readTimeoutMs) throws Exception;
=====================================================================
Found a 10 line (26 tokens) duplication in the following files: 
Starting at line 58 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java
Starting at line 86 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\http\MetricsHttpAgent.java

            result = httpAgent.httpGet(path, headers, paramValues, encode, readTimeoutMs);
        } finally {
            timer.observeDuration();
        }
        
        return result;
    }
    
    @Override
    public HttpRestResult<String> httpPost(String path, Map<String, String> headers, Map<String, String> paramValues,
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 201 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 212 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 133 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java
Starting at line 147 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

            tmp = new File(tmp, FAILOVER_FILE_CHILD_3);
            tmp = new File(tmp, tenant);
        }
        return new File(new File(tmp, group), dataId);
    }
=====================================================================
Found a 2 line (26 tokens) duplication in the following files: 
Starting at line 207 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalConfigInfoProcessor.java
Starting at line 126 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java
Starting at line 140 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\LocalEncryptedDataKeyProcessor.java

    static File getSnapshotFile(String envName, String dataId, String group, String tenant) {
        File tmp = new File(LOCAL_SNAPSHOT_PATH, envName + SUFFIX);
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 183 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 229 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java

        } else {
            if (StringUtils.isBlank(endpoint)) {
                throw new NacosException(NacosException.CLIENT_INVALID_PARAM, "endpoint is blank");
            }
            this.name = endpoint + "-" + namespace;
=====================================================================
Found a 16 line (26 tokens) duplication in the following files: 
Starting at line 159 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\utils\ParamUtils.java

        checkKeyParam(dataId, group);
        if (StringUtils.isBlank(content)) {
            throw new NacosException(NacosException.CLIENT_INVALID_PARAM, CONTENT_INVALID_MSG);
        }
    }
    
    /**
     * Check parameter.
     *
     * @param dataId  dataId
     * @param group   group
     * @param datumId datumId
     * @param content content
     * @throws NacosException nacos exception
     */
    public static void checkParam(String dataId, String group, String datumId, String content) throws NacosException {
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 254 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 260 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

        return selectInstances(serviceName, new ArrayList<String>(), healthy, subscribe);
    }
    
    @Override
    public List<Instance> selectInstances(String serviceName, String groupName, boolean healthy, boolean subscribe)
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java
Starting at line 85 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\utils\InitUtils.java

            });
        }
        
        tmpNamespace = TemplateUtils.stringEmptyAndThenExecute(tmpNamespace, new Callable<String>() {
            @Override
            public String call() {
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 133 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java
Starting at line 150 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\NacosConfigServiceTest.java

    public void testPublishConfig() throws NacosException {
        String dataId = "1";
        String group = "2";
        String content = "123";
        String namespace = "";
        String type = ConfigType.getDefaultType().getType();
=====================================================================
Found a 6 line (26 tokens) duplication in the following files: 
Starting at line 26 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigRequestTest.java
Starting at line 49 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\filter\impl\ConfigRequestTest.java

    public void testGetterAndSetter() {
        ConfigRequest configRequest = new ConfigRequest();
        String dataId = "id";
        String group = "group";
        String tenant = "n";
        String content = "abc";
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 101 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 128 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 175 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(dataId, group);
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("group invalid", e.getMessage());
        }
=====================================================================
Found a 5 line (26 tokens) duplication in the following files: 
Starting at line 118 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 128 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java
Starting at line 139 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\config\utils\ParamUtilsTest.java

            ParamUtils.checkKeyParam(dataId, group, datumId);
            
            Assert.fail();
        } catch (NacosException e) {
            Assert.assertEquals("dataId invalid", e.getMessage());
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 127 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 149 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.registerInstance(serviceName, ip, port, clusterName);
        //then
        verify(proxy, times(1))
                .registerService(eq(serviceName), eq(Constants.DEFAULT_GROUP), argThat(new ArgumentMatcher<Instance>() {
=====================================================================
Found a 3 line (26 tokens) duplication in the following files: 
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 256 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.deregisterInstance(serviceName, ip, port, clusterName);
        //then
        verify(proxy, times(1)).deregisterService(eq(serviceName), eq(Constants.DEFAULT_GROUP),
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 297 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 388 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 524 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 690 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName);
        //then
        verify(proxy, times(1)).subscribe(serviceName, Constants.DEFAULT_GROUP, "");
    }
    
    @Test
    public void testGetAllInstances2() throws NacosException {
=====================================================================
Found a 7 line (26 tokens) duplication in the following files: 
Starting at line 341 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 432 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 606 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 727 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        client.getAllInstances(serviceName, clusterList);
        //then
        verify(proxy, times(1)).subscribe(serviceName, Constants.DEFAULT_GROUP, "cluster1,cluster2");
    }
    
    @Test
    public void testGetAllInstances6() throws NacosException {
=====================================================================
Found a 8 line (26 tokens) duplication in the following files: 
Starting at line 681 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 699 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 717 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 737 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

        EventListener listener = new EventListener() {
            @Override
            public void onEvent(Event event) {
            
            }
        };
        //when
        client.subscribe(serviceName, listener);
=====================================================================
Found a 4 line (26 tokens) duplication in the following files: 
Starting at line 161 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java
Starting at line 170 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\gprc\redo\NamingGrpcRedoServiceTest.java

    public void testSubscriberRegistered() {
        ConcurrentMap<String, SubscriberRedoData> subscribes = getSubscriberRedoDataMap();
        redoService.cacheSubscriberForRedo(SERVICE, GROUP, CLUSTER);
        redoService.subscriberRegistered(SERVICE, GROUP, CLUSTER);
=====================================================================
Found a 9 line (26 tokens) duplication in the following files: 
Starting at line 94 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java
Starting at line 114 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\security\SecurityProxyTest.java

        SecurityProxy securityProxy = new SecurityProxy(properties, nacosRestTemplate);
        //when
        boolean ret = securityProxy.login(Collections.singletonList("localhost"));
        //then
        Assert.assertTrue(ret);
    }
    
    @Test
    public void testTestLoginServerListLoginInWindow() throws Exception {
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 46 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\AbstractConfigChangeParser.java
Starting at line 62 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\AbstractConfigChangeParser.java

        for (Map.Entry<String, Object> e : (Iterable<Map.Entry<String, Object>>) oldMap.entrySet()) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 406 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\CacheData.java
Starting at line 395 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

    public CacheData(ConfigFilterChainManager configFilterChainManager, String name, String dataId, String group,
            String tenant) {
        if (null == dataId || null == group) {
            throw new IllegalArgumentException("dataId=" + dataId + ", group=" + group);
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 793 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java
Starting at line 804 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ClientWorker.java

                                listenCachesMap.put(String.valueOf(cache.getTaskId()), cacheDatas);
                            }
                            cacheDatas.add(cache);
                            
                        }
                    } else if (CollectionUtils.isEmpty(cache.getListeners())) {
=====================================================================
Found a 4 line (25 tokens) duplication in the following files: 
Starting at line 138 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 209 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java

        for (String serverAddr : fixed) {
            String[] serverAddrArr = InternetAddressUtil.splitIPPortStr(serverAddr);
            if (serverAddrArr.length == 1) {
                serverAddrs.add(serverAddrArr[0] + InternetAddressUtil.IP_PORT_SPLITER + ParamUtil.getDefaultServerPort());
=====================================================================
Found a 1 line (25 tokens) duplication in the following files: 
Starting at line 148 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 151 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java

            this.name = FIXED_NAME + "-" + getFixedNameSuffix(serverAddrs.toArray(new String[serverAddrs.size()]));
=====================================================================
Found a 3 line (25 tokens) duplication in the following files: 
Starting at line 179 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java
Starting at line 234 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\config\impl\ServerListManager.java

        if (StringUtils.isBlank(namespace)) {
            this.name = endpoint;
            this.addressServerUrl = String.format("http://%s:%d%s/%s", endpoint, this.endpointPort,
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 266 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java
Starting at line 278 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\NacosNamingService.java

        return selectInstances(serviceName, clusters, healthy, true);
    }
    
    @Override
    public List<Instance> selectInstances(String serviceName, String groupName, List<String> clusters, boolean healthy)
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 106 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 160 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 207 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 72 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 171 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public ServiceInfo queryInstancesOfService(String serviceName, String groupName, String clusters, int udpPort,
            boolean healthyOnly) throws NacosException {
=====================================================================
Found a 5 line (25 tokens) duplication in the following files: 
Starting at line 132 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\NamingClientProxyDelegate.java
Starting at line 191 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\gprc\NamingGrpcClientProxy.java
Starting at line 324 of C:\Users\Arthur\Desktop\Code\nacos\client\src\main\java\com\alibaba\nacos\client\naming\remote\http\NamingHttpClientProxy.java
Starting at line 98 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java
Starting at line 197 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\remote\AbstractNamingClientProxyTest.java

    }
    
    @Override
    public ListView<String> getServiceList(int pageNo, int pageSize, String groupName, AbstractSelector selector)
            throws NacosException {
=====================================================================
Found a 6 line (25 tokens) duplication in the following files: 
Starting at line 336 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 360 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 427 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java
Starting at line 451 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\NacosNamingServiceTest.java

    public void testGetAllInstances5() throws NacosException {
        //given
        String serviceName = "service1";
        List<String> clusterList = Arrays.asList("cluster1", "cluster2");
        //when
        client.getAllInstances(serviceName, clusterList);
=====================================================================
Found a 7 line (25 tokens) duplication in the following files: 
Starting at line 52 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\cache\ServiceInfoHolderTest.java
Starting at line 121 of C:\Users\Arthur\Desktop\Code\nacos\client\src\test\java\com\alibaba\nacos\client\naming\cache\ServiceInfoHolderTest.java

        hosts.add(instance2);
        info.setHosts(hosts);
        
        Properties prop = new Properties();
        ServiceInfoHolder holder = new ServiceInfoHolder("aa", prop);
        
        ServiceInfo actual1 = holder.processServiceInfo(info);
